// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SOC.IoT.ApiGateway.Entities.Contexts;

#nullable disable

namespace SOC.IoT.ApiGateway.Migrations
{
    [DbContext(typeof(SOCIoTDbContext))]
    [Migration("20230728120627_add-migration fix-permissions")]
    partial class addmigrationfixpermissions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IoTId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Hue white and color ambiance E26/E27",
                            IoTId = "0x00178801062f573d",
                            Manufacturer = "Philips",
                            Model = "9290022166",
                            Name = "Philips Lightbulb",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Wireless button",
                            IoTId = "0x00124b002268b3b2",
                            Manufacturer = "SONOFF",
                            Model = "SNZB-01",
                            Name = "Philips Lightbulb",
                            Type = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Temperature and humidity sensor",
                            IoTId = "0x00124b0022d2d320",
                            Manufacturer = "SONOFF",
                            Model = "SNZB-02",
                            Name = "SONOFF Temp and Humidity Sensor",
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Mi power plug ZigBee EU",
                            IoTId = "0x04cf8cdf3c7597cd",
                            Manufacturer = "Xiaomi",
                            Model = "ZNCZ04LM",
                            Name = "Xiaomi Mi Socket",
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Contact sensor",
                            IoTId = "0x00124b00226969ac",
                            Manufacturer = "SONOFF",
                            Model = "SNZB-04",
                            Name = "Contact Sensor",
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Wireless switch with 4 buttons",
                            IoTId = "0xa4c13893cdd87674",
                            Manufacturer = "TuYa",
                            Model = "TS0044",
                            Name = "Wireless switch",
                            Type = 3
                        },
                        new
                        {
                            Id = 7,
                            Description = "Smart 7W E27 light bulb",
                            IoTId = "0x00158d0001dd7e46",
                            Manufacturer = "Nue / 3A",
                            Model = "HGZB-06A",
                            Name = "Light bulb",
                            Type = 0
                        });
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.DeviceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Configuration")
                        .HasColumnType("jsonb");

                    b.Property<int>("DeviceID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DeviceID");

                    b.ToTable("DevicesHistory");
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Create-Workflow",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Update-Workflow",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Read-Workflow",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Delete-Workflow",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Create-Trigrer",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Update-Trigger",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Read-Trigger",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Delete-Trigger",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Create-Automation",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Update-Automation",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "Read-Automation",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 12,
                            Name = "Delete-Automation",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 13,
                            Name = "Create-Device",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 14,
                            Name = "Update-Device",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 15,
                            Name = "Read-Device",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 16,
                            Name = "Delete-Device",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 17,
                            Name = "Create-DeviceHistory",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 18,
                            Name = "Update-DeviceHistory",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 19,
                            Name = "Read-DeviceHistory",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 20,
                            Name = "Delete-DeviceHistory",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 21,
                            Name = "Read-Workflow",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "Read-Automation",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 23,
                            Name = "Read-Device",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 24,
                            Name = "Read-DeviceHistory",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 26,
                            Name = "Read-Trigger",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.DeviceHistory", b =>
                {
                    b.HasOne("SOC.IoT.ApiGateway.Entities.Device", "Device")
                        .WithMany("DevicesHistory")
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.Permission", b =>
                {
                    b.HasOne("SOC.IoT.ApiGateway.Entities.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.User", b =>
                {
                    b.HasOne("SOC.IoT.ApiGateway.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.Device", b =>
                {
                    b.Navigation("DevicesHistory");
                });

            modelBuilder.Entity("SOC.IoT.ApiGateway.Entities.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
