openapi: 3.0.3
info:
  title: TheHive
  version: v1
  description: "\n## General\n\nAlmost all of the endpoints will require an authentication.\
    \ Supported ways of authentication are detailed below.\n\nEach user has permissions,\
    \ defined by their role. The permissions of the user are checked when making api\
    \ calls. \n \nSome features (and endpoints) are only enabled with a higher license\
    \ and define a list of required `capabilities` detailed below as `TheHive-capabilities`.\n\
    To see which capabilities your license include, see the `/api/v1/status` endpoint.\n\
    \n### Organisation\n\nBy default, the context of the API calls will be the default\
    \ organisation of the user. If you want to target another organisation you can\
    \ use the header `X-Organisation`.\n\nWith curl:\n```\ncurl -u <user>:<password>\
    \ -H 'X-Organisation: myOrg' http://localhost:9000/api/v1/alert ...\n```\n\nWith\
    \ python requests:\n```python\nheaders = {'X-Organisation': 'myOrg'}\nrequests.post('http://localhost:9000/api/v1/alert',\
    \ headers=headers, json=...)\n```\n"
  x-logo:
    url: /static/logo-thehive-doc.svg
    altText: TheHive Logo
tags:
- name: Case
  description: "\nA case is the main entity manipulated by TheHive. \nIt will centralize\
    \ all the information during the investigation of security incidents.\n\n**Note**:\
    \ For api calls, to refer to a case you can either use the `_id` or use the case\
    \ `number`\n\n#### Queries\n- Initial Queries:\n  - `listCase`: list all the cases\
    \ visible by the user\n  - `getCase`: get a case by id or name - additional field\
    \ `idOrName`\n  - ~~`countCase`~~: count the cases visible by the user, returns\
    \ a number **(deprecated)**\n- Queries available on Cases:\n  - `observables`\n\
    \  - `tasks`\n  - `assignableUsers`\n  - `organisations`\n  - `alerts`\n  - `shares`\n\
    \  - `procedures`\n  - `linkedCases`\n  - `attachments`\n  - `similarAlerts`\n\
    \  - `pages`\n  - `comments`\n- Extra data:\n  - `observableStats`\n  - `taskStats`\n\
    \  - `alerts`\n  - `alertCount`\n  - `isOwner`\n  - `shareCount`\n  - `permissions`\n\
    \  - `actionRequired`\n  - `procedureCount`\n  - `attachmentCount`\n  - `similarAlerts`\n\
    \  - `contributors`\n  - `computed.handlingDuration`\n  - `computed.handlingDurationInSeconds`\n\
    \  - `computed.handlingDurationInMinutes`\n  - `computed.handlingDurationInHours`\n\
    \  - `computed.handlingDurationInDays`\n  - `status`\n"
- name: Alert
  description: |2


    ### Queries
    - Initial Queries:
      - `listAlert`: list alerts visible by the user in the org
      - `getAlert` : get an alert by id
      - ~~`countAlert`~~: count all alerts **(deprecated)**
      - ~~`countUnreadAlert`~~: count alerts with status new **(deprecated)**
      - ~~`countImportedAlert`~~: count alerts imported into cases **(deprecated)**
    - Queries available on Alerts:
      - `observables`
      - `case`
      - `similarCases`
      - `similarAlerts`
      - `procedures`
      - `comments`
    - Extra data:
      - `similarCases`
      - `similarAlerts`
      - `importDate`
      - `caseNumber`
      - `status`
      - `procedureCount`
- name: Task
  description: |2

    A task can be linked to a Case or to a Case Template

    ### Queries
    - Initial Queries:
      - `listTask`: list tasks visible by the user in the current org
      - `getTask`: get task by id
      - `waitingTasks`: list tasks with status `Waiting` in the current org
      - `myTasks`: list tasks assigned to the current user in the current org
    - Queries available on Tasks
      - `assignableUsers`
      - `logs`
      - `case`
      - `caseTemplate`
      - `organisations`
      - `shares`
      - `inCase`: select only tasks linked to a case
    - Extra data:
      - `case`
      - `caseId`
      - `caseTemplate`
      - `caseTemplateId`
      - `isOwner`
      - `shareCount`
      - `actionRequired`
      - `actionRequiredMap`
- name: Observable
  description: |2

    ### Queries
    - Initial Queries:
      - `listObservable`
      - `getObservable`
    - Queries available on Observable
      - `similar`
      - `case`
      - `alert`
      - `shares`
    - Extra Data
      - `seen`
      - `shares`
      - `links`
      - `permissions`
      - `isOwner`
      - `shareCount`
- name: CustomField
  description: "\nCustom fields are additional fields that can enrich your Cases,\
    \ Alerts and Observables.\n\nFirst a custom field needs to be created by an admin\
    \ defining its type. Several types are available:\n\n  - `string`\n  - `integer`\n\
    \  - `float`\n  - `boolean`\n  - `date`\n  - `url`\n\n\nAfter a custom field is\
    \ created in TheHive, it can then be used on the objects that have a field `customFields`.\n\
    \nYou can either pass a json object:\n\n```json\n{\n  ...\n  \"customFields\"\
    : {\n      \"business-unit\": \"Marketing\",\n      \"reporters\": [\"Alice\"\
    , \"Bob\"] \n   }\n}\n```\n\nor an array of values:\n```json\n{\n  ...\n  \"customFields\"\
    : [\n      {\"name\": \"business-unit\", \"value\": \"Marketing\"},\n      {\"\
    name\": \"reporters\", \"value\": \"Alice\"},\n      {\"name\": \"reporters\"\
    , \"value\": \"Bob\"}\n   ]\n}\n```\n\nMulti values on a custom field are supported\
    \ by repeating the value in the array (since 5.0) or by passing an array in the\
    \ object (since 5.1) \n"
- name: Comment
  description: |2

    ### Queries:
    - Initial Queries:
      - `listComment`
      - `getComment`
- name: Task Log
  description: "\n### Queries\n- Initial Queries: \n  - `listLog`\n  - `getLog`\n\
    - Extra Data:\n  - `case`\n  - `task`\n  - `taskId`\n  - `actionCount`\n"
- name: Timeline
- name: TTP
  description: |2

    ### Queries for Procedure
    - Initial Queries
      - `listProcedure`
      - `getProcedure`
    - Extra Data
      - `pattern`
      - `tactic`
      - `patternParent`
      - `patternTactics`
- name: Share
  description: |2+

    ### Queries
    - Initial Queries:
      - `listShare`
      - `getShare`
    - Queries available on a Share
      - `case`
      - `observables`
      - `tasks`
      - `organisation`

- name: Observable Type
  description: |2

    ### Queries for ObservableType
    - Initial Queries:
      - `listObservableType`
- name: User
  description: "\nYou can use `_id` or `login` to refer to a user (in userId fields)\
    \ \n"
- name: Page
  description: |2

    ### Queries
    - Initial Queries:
      - `listPage`: list pages visible by the user in the org (knowledge base pages and case pages)
      - `listOrganisationPage`: list knowledge base pages of the org
      - `getPage`: get a page by id
    - Queries available on Pages
      - `headerPage` *experimental, breaking changes could happen in future releases*: only return page header info, i.e. without the content.
        NB: this is pagination query that takes `from` and `to` parameters
- name: PageTemplate
  description: |2

    ### Queries
    - Initial Queries:
      - `listPageTemplate`: list page templates visible by the user in the org
      - `getPageTemplate`: get a page template by id
    - Queries available on Page Templates
      - `caseTemplates`
      - `headerPage` *experimental, breaking changes could happen in future releases*: only return page template header info, i.e. without the content.
        NB: this is a pagination query that takes `from`, `to` and `extraData` parameters
    - Extra data:
      - `caseTemplateCount`
- name: CaseTemplate
  description: |2

    ### Queries
    - Initial Queries:
      - `listCaseTemplate`: list case templates visible by the user in the org
      - `getCaseTemplate`: get a case template by id
    - Queries available on Case Templates
      - `tasks`
      - `pageTemplates`
    - Extra data:
      - `pageTemplateHeaders`
servers:
- url: /
paths:
  /api/v1/query:
    post:
      tags:
      - Query and Export
      description: "\n### Overview\n\nThe Query API is the API used to search for\
        \ objects with filtering and sorting capabilities. It's an API introduced\
        \ by TheHive 4 and is optimized for the the new data model.\n\nTheHive comes\
        \ with a list of predefined search *Queries* like:\n\n- `listOrganisation`\n\
        - `listUser`\n- `listAlert`\n- `listCase`\n\nThe Query API request body should\
        \ be an array of *operations* of different types:\n\n- Selection: *Required*\n\
        \    - list of objects\n    - object by identifier\n- Filtering: *optional*\n\
        - Sorting: *optional*\n- Pagination: *optional*\n\n### Examples\n\nSimple\
        \ List:\n```json\n{\n    \"query\": [\n        {\n            \"_name\": \"\
        listOrganisation\"\n        }\n    ]\n}\n```\n\nList with filters:\n```json\n\
        {\n    \"query\": [\n        {\n            \"_name\": \"listOrganisation\"\
        \n        },\n        {\n            \"_name\": \"filter\",\n            \"\
        _eq\": {\n                \"_field\": \"name\",\n                \"_value\"\
        : \"admin\"\n            }\n        }\n    ]\n}\n```\n\nList with pagination:\n\
        \nList organisations called *admin*, sorted by ascendant `_updatedAt` value,\
        \ paginated to display the first 15 items\n```json\n{\n    \"query\": [\n\
        \        {\n            \"_name\": \"listOrganisation\"\n        },\n    \
        \    {\n            \"_name\": \"filter\",\n            \"_eq\": {\n     \
        \           \"_field\": \"name\",\n                \"_value\": \"admin\"\n\
        \            }\n        },\n        {\n            \"_name\": \"sort\",\n\
        \            \"_fields\": [\n                {\n                    \"_updatedAt\"\
        : \"asc\"\n                }\n            ]\n        },\n        {\n     \
        \       \"_name\": \"page\",\n            \"from\": 0,\n            \"to\"\
        : 15\n        }\n    ]\n}\n```\n\nChaining queries:\n\nList the observables\
        \ for the case with id `~1234`\n```json\n{\n    \"query\": [\n        {\n\
        \            \"_name\": \"getCase\",\n            \"idOrName\": \"~1234\"\n\
        \        },\n        {\n            \"_name\": \"observables\"\n        },\n\
        \        {\n            \"_name\": \"page\",\n            \"from\": 0,\n \
        \           \"to\": 15\n        }\n    ]\n}\n```\n\n### Filters\n\nAvailable\
        \ filters:\n\n- `_and`: `{\"_and\": [...other filters] }` \n- `_or`: `{\"\
        _or\": [...other filters] }` \n- `_not`: `{\"_not\": { other filter } }`\n\
        - `_any`: `{\"_any\": null}` match any entities\n- `_lt`: `{\"_lt\": {\"_field\"\
        : \"<field>\", \"_value\": <value>}` less than\n- `_gt`: `{\"_gt\": {\"_field\"\
        : \"<field>\", \"_value\": <value>}` greater than\n- `_lte`: `{\"_lte\": {\"\
        _field\": \"<field>\", \"_value\": <value>}` less than or equal\n- `_gte`:\
        \ `{\"_gte\": {\"_field\": \"<field>\", \"_value\": <value>}` greater than\
        \ or equal\n- `_ne`: `{\"_ne\": {\"_field\": \"<field>\", \"_value\": <value>}`\
        \ not equal\n- `_eq`: `{\"_eq\": {\"_field\": \"<field>\", \"_value\": <value>}`\
        \ equal\n- `_is`: `{\"_is\": {\"_field\": \"<field>\", \"_value\": <value>}`\
        \ same as `_eq`\n- `_startsWith`: `{\"_startsWith\": {\"_field\": \"<field>\"\
        , \"_value\": \"<value>\"}` string starts with\n- `_endsWith`: `{\"_endsWith\"\
        : {\"_field\": \"<field>\", \"_value\": \"<value>\"}` string ends with\n-\
        \ `_id`: `{\"_id\": \"~123\"}` filter by ID\n- `_between`: `{\"_between\"\
        : {\"_field\": \"<field>\", \"_from\": <from>, \"_to\": <to>}}` range filter,\
        \ from is inclusive, to is exclusive, they are both mandatory\n- `_in`: `{\"\
        _in\": {\"_field\": \"<field>\", \"_values\": [<value1>, ...] }}` the field\
        \ is one of these values\n- `_contains`: `{\"_contains\": \"<field>\"}` if\
        \ an object contains this field \n- `_like`: `{\"_like\": {\"_field\": \"\
        <field>\", \"_value\": \"<value>\"}` the field (or a word, depending on the\
        \ index type) contains the substring\n- `_match`: `{\"_match\": {\"_field\"\
        : \"<field>\", \"_value\": \"<value>\"}` the field contains the word\n\n###\
        \ Sorting\n\nUse `{\"_name\": \"sort\", \"fields\": [ {\"<field>\": \"<direction>\"\
        \ }, ... ]}`\n\nWith `direction` being one of `asc` or `desc`\n\n### Pagination\
        \ and extraData\n\n- Simple pagination: `{\"_name\": \"page\", \"from\": 0,\
        \ \"to\": 30}`\n- Ask for extra data with the object:\n  `{\"_name\": \"page\"\
        , \"from\": 0, \"to\": 30, \"extraData\": [\"shareCount\", \"contributors\"\
        ] }`\n  \n  The `extraData` field of the object will contain a json object\
        \ with the selected fields.\n  The available `extraData` depends on the entity\
        \ being requested.\n\n\n"
      operationId: Query API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputQuery'
            example:
              query:
              - _name: listCase
              - from: 0
                to: 10
                _name: page
        required: true
      responses:
        '200':
          description: ''
          headers:
            X-Total:
              description: Total size of the results when `page > extraData` contains
                `"total"`
              required: false
              schema:
                type: integer
                format: int64
          content:
            application/json:
              schema: {}
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/export:
    get:
      tags:
      - Query and Export
      description: |2

        **WARNING**: this is an unstable route. Breaking changes could happen in future releases.

        Exports the results of a query as a downloadable file in the specified format.

        The `query` query param is stringified json value that conforms to the format
        described in the `Query` documentation.

        The `options` query param is a stringified json value that can have one of the following format:

        - For CSV export:
          - `format`: `(string)` Must have the `"csv"` value
          - `fileName`: `(optional, string)` The file name, without extension
          - At least one of the two following fields must be provided:
            - `model`: `(optional, string)` Accepted values are `"Case"`, `"Alert"`, `"User"`, `"Organisation"`, `"Procedure"` and `"Task"`
            - `fields`: `(optional, array of strings)` Extra fields to add to the exported data
          - `delimiter`: `(optional, character)`
          - `quoteChar`: `(optional, character)`
          - `escapeChar`: `(optional, character)`
        - For JSON export:
          - `format`: `(string)` Must have the `"json"` value
          - `fileName`: `(optional, string)` The file name, without extension
      operationId: Export API (unstable route)
      parameters:
      - name: query
        in: query
        required: true
        schema:
          type: string
      - name: options
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: the content-type of the file
              required: true
              schema:
                type: string
            X-Total:
              description: the total number of elements
              required: false
              schema:
                type: string
            Content-Disposition:
              description: will be of kind attachment with the filename
              required: true
              schema:
                type: string
            Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case:
    post:
      tags:
      - Case
      description: Create a new case empty case. A Case Template can be used to provide
        tasks and custom fields
      operationId: Create case
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCase'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{idOrName}:
    get:
      tags:
      - Case
      operationId: Get case
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Case
      operationId: Delete case
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Case
      operationId: Update case
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCase'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/_bulk:
    patch:
      tags:
      - Case
      operationId: Bulk update case
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCaseWithIds'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/_merge/{ids}:
    post:
      tags:
      - Case
      description: Create a new case by merging the provided cases. The similar observables
        will be merged
      operationId: Merge cases
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/alert/{alertId}:
    delete:
      tags:
      - Case
      operationId: Unlink alert from case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/observable/_merge:
    post:
      tags:
      - Case
      operationId: Merge similar observables of this case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputMergeCases'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/links:
    get:
      tags:
      - Case
      operationId: Get linked cases
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputCaseWithLinks'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/customField/{cfId}:
    delete:
      tags:
      - Case
      operationId: Delete a custom field
      parameters:
      - name: cfId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/import:
    post:
      tags:
      - Case
      description: The file must be a .thar file
      operationId: Import Case from file
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - _json
              - file
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputImportCase'
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputImportCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.importArchive
  /api/v1/case/{caseId}/export:
    get:
      tags:
      - Case
      description: Export the case as a TheHive archive (.thar) file. The file can
        be used to import the Case in an other TheHive instance
      operationId: Export Case as archive
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: password
        in: query
        description: A password to encrypt the file. Needs to be provided when importing
          the file
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Disposition:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            Content-Type:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.exportArchive
  /api/v1/case/_bulk/caseTemplate:
    post:
      tags:
      - Case
      description: You can choose what part of the case template to apply on the existing
        case(s)
      operationId: Apply CaseTemplate on existing cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputApplyCaseTemplateWithIds'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/owner:
    post:
      tags:
      - Case
      description: Update the current owner of the case. Beware, the current organisation
        could lose access to the case if no profile is set
      operationId: Change Case owning organisation
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputChangeCaseOwnership'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert:
    post:
      tags:
      - Alert
      description: "Endpoints allows the creation of alerts in TheHive\nIt supports\
        \ both json input of multipart. **To create observables with files, you need\
        \ to use a multipart body**.\n\nTo use the multipart, you need to send several\
        \ parts:\n- a data part with the name `_json` containing a json of the alert\
        \ to create\n   - in the `observables`, if you want to use a simple data,\
        \ use the `data` field of the observable\n   - if you want to use a file,\
        \ in the `attachment` field use a string. This string should refers to a part\
        \ of the multipart body containing your file\n   - if you want to use an existing\
        \ attachment in TheHive, set an object containing the name, content-type and\
        \ id of the attachment\n\nYou can always add observables to your alert later\
        \ using the endpoint `POST /api/v1/alert/<alertId>/observable`\n\n### With\
        \ curl\n\nCreate an alert with observables of type strings using json\n```\n\
        curl http://<thehive_endpoint>/api/v1/alert -H 'Authorization: Bearer <api_key>'\
        \ -X POST -H 'Content-Type: application/json' --data '\n{\n  \"type\": \"\
        alertType\",\n  \"source\": \"test\",\n  \"sourceRef\": \"1\",\n  \"title\"\
        : \"alert title\",\n  \"description\": \"alert description\",\n  \"observables\"\
        : [\n     { \"dataType\": \"url\", \"data\": \"http://example.org\" },\n \
        \    { \"dataType\": \"mail\", \"data\": \"foo@example.org\" }\n  ]\n}\n```\n\
        \nCreate an alert with 2 observables, an url and a file, using multipart\n\
        ```\ncurl http://<thehive_endpoint>/api/v1/alert -H 'Authorization: Bearer\
        \ <api_key>' -X POST -F _json='\n{\n  \"type\": \"alertType\",\n  \"source\"\
        : \"test\",\n  \"sourceRef\": \"1\",\n  \"title\": \"alert title\",\n  \"\
        description\": \"alert description\",\n  \"observables\": [\n     { \"dataType\"\
        : \"url\", \"data\": \"http://example.org\" },\n     { \"dataType\": \"file\"\
        , \"attachment\": \"attachment0\" }\n  ]\n}\n' -F attachment0=@<file>\n```\n\
        \n### With python (requests)\n\nCreate an alert with two files as observables\n\
        ```python\nimport json\nimport requests \n\n# 'fileA' and 'fileB' are arbitrary\
        \ names. You can choose your own.\n# the name must be used as a key in the\
        \ dictionary 'files'\nobservables = [\n    {'dataType': 'file', 'attachment':\
        \ 'fileA'}, \n    {'dataType': 'file', 'attachment': 'fileB'}, \n]\nfiles\
        \ = {\n    'fileA': open(path_to_fileA, 'rb'),\n    'fileB': open(path_to_fileB,\
        \ 'rb')\n}\nalert = {\n    'title': 'my title',\n    'type': 'test',\n   \
        \ 'source': 'python',\n    'sourceRef': '1',\n    'description': 'description\
        \ ...',\n    'observables': observables\n}\n\n# Send the request\nresponse\
        \ = requests.post(\n    f'{thehive_url}/api/v1/alert',\n    # send the files\
        \ and the alert with the special part '_json'\n    files={\n        '_json':\
        \ json.dumps(alert), \n        **files\n    },\n    headers={ 'Authorization':\
        \ f'Bearer {thehive_api_key}' }\n)\n\n# check response code\nresponse.raise_for_status()\n\
        ```\n\n"
      operationId: Create Alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateAlert'
          multipart/form-data:
            schema:
              required:
              - _json
              - <attachment_name>
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputCreateAlert'
                <attachment_name>:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAlert'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}:
    get:
      tags:
      - Alert
      operationId: Get Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAlert'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Alert
      operationId: Delete Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Alert
      operationId: Update Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateAlert'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/_bulk:
    patch:
      tags:
      - Alert
      operationId: Bulk update Alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateAlertWithIds'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/case:
    post:
      tags:
      - Alert
      operationId: Create Case from Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCaseFromAlert'
        required: false
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/follow:
    post:
      tags:
      - Alert
      operationId: Follow Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/unfollow:
    post:
      tags:
      - Alert
      operationId: Unfollow Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/merge/{caseId}:
    post:
      tags:
      - Alert
      operationId: Merge Alert with Case
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/merge/_bulk:
    post:
      tags:
      - Alert
      operationId: Merge bulk Alerts with Case
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAlertsMergeWithCase'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/delete/_bulk:
    post:
      tags:
      - Alert
      operationId: Delete Alert in bulk
      requestBody:
        content:
          application/json:
            schema:
              required:
              - ids
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                    description: The _id of the entity or its 'name' (depends of the
                      entity)
                    example: ~354
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/observable:
    post:
      tags:
      - Observable
      description: |
        Add an observable to an existing case.

        For examples, see 'Create Observable in Alert'
      operationId: Create Observable in Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: dataType
        in: query
        description: allow to set the dataType from the query parameters
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateObservable'
          multipart/form-data:
            schema:
              required:
              - _json
              - attachment
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputCreateObservable'
                attachment:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputObservable'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/observable:
    post:
      tags:
      - Observable
      description: "Add an observable to an existing alert.\n\n### With curl\n\nTo\
        \ add an observable with data of type string, send a simple json request with\
        \ your data:\n```bash\ncurl http://<thehive_endpoint>/api/v1/alert/<alertId>/observable\
        \ -H 'Authorization: Bearer <api_key>' -X POST -H 'Content-Type: application/json'\
        \ --data '\n  { \"dataType\": \"url\", \"data\": \"http://example.org\" }\n\
        '\n```\n\nAdding an observable with attachment file. Note: the file should\
        \ be sent as `attachment`\n```bash\ncurl http://<thehive_endpoint>/api/v1/alert/<alertId>/observable\
        \ -H 'Authorization: Bearer <api_key>' -X POST -F _json='\n{ \"dataType\"\
        : \"file\" }\n' -F attachment=@<file>\n```\n\n`attachment` can be repeated\
        \ to upload several files with one http call. (You can also send a zip file\
        \ with `isZip` for the same effect)\n```bash\ncurl http://<thehive_endpoint>/api/v1/alert/<alertId>/observable\
        \ -H 'Authorization: Bearer <api_key>' -X POST -F _json='\n{ \"dataType\"\
        : \"file\", \"tlp\": 3 }\n' -F attachment=@<file1> -F attachment=@<file2>\n\
        ```\n\nWhen uploading a file, the dataType attachment is guessed, so you could\
        \ just send the file if you don't need to set any property on the observable\n\
        curl http://<thehive_endpoint>/api/v1/alert/<alertId>/observable -H 'Authorization:\
        \ Bearer <api_key>' -X POST -F attachment=@<file>\n\n### With python (requests)\n\
        \nCreate a simple observable of type `url`:\n\n```python\nimport requests\n\
        \nobservable = {'dataType': 'url', 'data': 'example.org'}\nresponse = requests.post(\n\
        \    f'{thehive_url}/api/v1/alert/{alert_id}/observable',\n    json=observable,\n\
        \    headers={ 'Authorization': f'Bearer {thehive_api_key}' }\n)\n\n# check\
        \ response code\nresponse.raise_for_status()\n```\n\n\nSending two files with\
        \ a custom message and tlp:\n```python\nimport json\nimport requests \n\n\
        observable = {'dataType': 'file', 'message': 'Files from infected server',\
        \ 'tlp': 3}\n\n# Send the request\nresponse = requests.post(\n    f'{thehive_url}/api/v1/alert/{alert_id}/observable',\n\
        \    # send the files and the observable with the special part '_json'\n \
        \   files=[\n        ('_json', json.dumps(observable)),\n        ('attachment',\
        \ open(path_to_fileA, 'rb')),\n        ('attachment', open(path_to_fileB,\
        \ 'rb'))\n    ],\n    headers={ 'Authorization': f'Bearer {thehive_api_key}'\
        \ }\n)\n\n# check response code\nresponse.raise_for_status()\n\n```\n"
      operationId: Create Observable in Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: dataType
        in: query
        description: allow to set the dataType from the query parameters
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateObservable'
          multipart/form-data:
            schema:
              required:
              - _json
              - attachment
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputCreateObservable'
                attachment:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputObservable'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/{observableId}:
    get:
      tags:
      - Observable
      operationId: Get Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputObservable'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Observable
      operationId: Delete Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Observable
      operationId: Update Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateObservable'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/_bulk:
    patch:
      tags:
      - Observable
      operationId: Update bulk of Observables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateObservableWithIds'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/task:
    post:
      tags:
      - Task
      operationId: Create Task in Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateTask'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTask'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}:
    get:
      tags:
      - Task
      operationId: Get Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTask'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Task
      operationId: Delete Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Task
      operationId: Update Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateTask'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/_bulk:
    patch:
      tags:
      - Task
      operationId: Update bulk of Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateTaskWithIds'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/actionRequired:
    get:
      tags:
      - Task
      operationId: Task actions required
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_Boolean'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/actionRequired/{orgId}:
    put:
      tags:
      - Task
      operationId: Set Task as required by organisation
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/actionDone/{orgId}:
    put:
      tags:
      - Task
      operationId: Set Task as done by organisation
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/log:
    post:
      tags:
      - Task Log
      operationId: Create Task Log
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateLog'
          multipart/form-data:
            schema:
              required:
              - _json
              - attachments
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputCreateLog'
                attachments:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputLog'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{logId}:
    delete:
      tags:
      - Task Log
      operationId: Delete Task Log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Task Log
      operationId: Update Task Log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateLog'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{logId}/attachments:
    post:
      tags:
      - Task Log
      operationId: Add attachments to Task Log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputAddAttachments'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{logId}/attachments/{attachmentId}:
    delete:
      tags:
      - Task Log
      operationId: Delete attachment from Task Log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/page:
    post:
      tags:
      - Page
      operationId: Create a Page
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreatePage'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPage'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/page/{pageId}:
    delete:
      tags:
      - Page
      operationId: Delete a Page
      parameters:
      - name: pageId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Page
      operationId: Update a Page
      parameters:
      - name: pageId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdatePage'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/page:
    post:
      tags:
      - Page
      operationId: Create a Page in a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreatePage'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPage'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/page/{pageId}:
    delete:
      tags:
      - Page
      operationId: Delete a Page in a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: pageId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Page
      operationId: Update a Page in a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: pageId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdatePage'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/comment:
    post:
      tags:
      - Comment
      operationId: Create Comment in Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComment'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputComment'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/comment:
    post:
      tags:
      - Comment
      operationId: Create Comment in Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComment'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputComment'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/comment/{commentId}:
    delete:
      tags:
      - Comment
      operationId: Delete Comment
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Comment
      operationId: Update Comment
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComment'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/timeline:
    get:
      tags:
      - Case
      - Timeline
      operationId: Get Case Timeline
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTimeline'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.timeline
  /api/v1/case/{caseId}/customEvent:
    post:
      tags:
      - Timeline
      operationId: Create Custom Event
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCustomEvent'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCustomEvent'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/customEvent/{eventId}:
    delete:
      tags:
      - Timeline
      operationId: Delete a Custom Event
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Timeline
      operationId: Update a Custom Event
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCustomEvent'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseTemplate:
    post:
      tags:
      - CaseTemplate
      operationId: Create CaseTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCaseTemplate'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseTemplate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseTemplate/{caseTemplateNameOrId}:
    get:
      tags:
      - CaseTemplate
      operationId: Get CaseTemplate
      parameters:
      - name: caseTemplateNameOrId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseTemplate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - CaseTemplate
      operationId: Delete CaseTemplate
      parameters:
      - name: caseTemplateNameOrId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - CaseTemplate
      operationId: Update CaseTemplate
      parameters:
      - name: caseTemplateNameOrId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCaseTemplate'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseTemplate/{caseTemplateNameOrId}/pageTemplate/link:
    put:
      tags:
      - CaseTemplate
      operationId: Link PageTemplates to a CaseTemplate
      parameters:
      - name: caseTemplateNameOrId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputLinkPageTemplatesToCaseTemplate'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/pageTemplate:
    post:
      tags:
      - PageTemplate
      operationId: Create a Page Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreatePage'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPage'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/pageTemplate/{pageTemplateId}:
    delete:
      tags:
      - PageTemplate
      operationId: Delete a Page Template
      parameters:
      - name: pageTemplateId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - PageTemplate
      operationId: Update a Page Template
      parameters:
      - name: pageTemplateId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdatePage'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/procedure:
    post:
      tags:
      - TTP
      operationId: Create Procedure for Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputProcedure'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProcedure'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/procedures:
    post:
      tags:
      - TTP
      operationId: Create several Procedures for Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputBulkProcedure'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputProcedure'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/procedure:
    post:
      tags:
      - TTP
      operationId: Create Procedure for Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputProcedure'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProcedure'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/procedures:
    post:
      tags:
      - TTP
      operationId: Create several Procedures for Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputBulkProcedure'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputProcedure'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/procedure/{procedureId}:
    delete:
      tags:
      - TTP
      operationId: Delete Procedure
      parameters:
      - name: procedureId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - TTP
      operationId: Update Procedure
      parameters:
      - name: procedureId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateProcedure'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/dashboard:
    post:
      tags:
      - Dashboard
      operationId: Create Dashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateDashboard'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputDashboard'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/dashboard/{dashboardId}:
    get:
      tags:
      - Dashboard
      operationId: Get Dashboard
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputDashboard'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Dashboard
      operationId: Delete Dashboard
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Dashboard
      operationId: Update Dashboard
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateDashboard'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/dashboard/{dashboardId}/owner:
    post:
      tags:
      - Dashboard
      operationId: Change Dashboard ownership
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputChangeDashboardOwnership'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/attachments:
    post:
      tags:
      - Case
      operationId: Add Attachment to Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputAttachmentsFile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAttachments'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/attachment/{attachmentId}/download:
    get:
      tags:
      - Case
      operationId: Download Attachment
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: the content-type of the file
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            Content-Disposition:
              description: will be of kind attachment with the filename
              required: true
              schema:
                type: string
            Content-Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/attachment/{attachmentId}:
    get:
      tags:
      - Case
      operationId: Get Attachment from case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: If-None-Match
        in: header
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            ETag:
              required: false
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '304':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Case
      operationId: Delete Attachment
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{logId}/attachment/{attachmentId}/download:
    get:
      tags:
      - Log
      operationId: Download Attachment from log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: the content-type of the file
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            Content-Disposition:
              description: will be of kind attachment with the filename
              required: true
              schema:
                type: string
            Content-Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{caseId}/attachment/{attachmentId}:
    get:
      tags:
      - Log
      operationId: Get Attachment from log
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: If-None-Match
        in: header
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            ETag:
              required: false
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '304':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/{observableId}/attachment/{attachmentId}/download:
    get:
      tags:
      - Observable
      description: If query parameter `?asZip` is set, the attachment will be sent
        as a zip file with a password. Default password is 'malware'
      operationId: Download Attachment from observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: asZip
        in: query
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: the content-type of the file
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            Content-Disposition:
              description: will be of kind attachment with the filename
              required: true
              schema:
                type: string
            Content-Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/{observableId}/attachment/{attachmentId}:
    get:
      tags:
      - Log
      operationId: Get Attachment from observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: If-None-Match
        in: header
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            ETag:
              required: false
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '304':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/attachment:
    post:
      tags:
      - Organisation
      operationId: Add Attachment to Organisation
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputAttachmentsFile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAttachments'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/attachment/{attachmentId}:
    get:
      tags:
      - Organisation
      operationId: Get Attachment
      parameters:
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: If-None-Match
        in: header
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            ETag:
              required: false
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '304':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Organisation
      operationId: Delete Attachment
      parameters:
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/login:
    post:
      tags:
      - Login
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
        required: true
      responses:
        '200':
          description: ''
          headers:
            Set-Cookie:
              required: false
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
  /api/v1/logout:
    get:
      tags:
      - Login
      operationId: Logout
      responses:
        '200':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
    post:
      tags:
      - Login
      operationId: Logout
      responses:
        '200':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
  /api/v1/auth/totp/get:
    get:
      tags:
      - TOTP
      operationId: Get TOTP secret
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTOTPSecret'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/auth/totp/set:
    post:
      tags:
      - TOTP
      operationId: Set TOTP secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTOTPCode'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/auth/totp/unset:
    post:
      tags:
      - TOTP
      operationId: Unset TOTP secret
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/auth/totp/unset/{user}:
    post:
      tags:
      - TOTP
      operationId: Unset TOTP secret for user
      parameters:
      - name: user
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/auth/local/passwordPolicy:
    get:
      tags:
      - Login
      operationId: Get current password policy
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
  /api/v1/user/current:
    get:
      tags:
      - User
      operationId: Get current User info
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user:
    post:
      tags:
      - User
      operationId: Create User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateUser'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}:
    get:
      tags:
      - User
      operationId: Get User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - User
      operationId: Lock User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - User
      operationId: Update User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateUser'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/force:
    delete:
      tags:
      - User
      operationId: Delete User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: organisation
        in: query
        required: false
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/organisations:
    put:
      tags:
      - User
      operationId: Set User Organisations
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSetUserOrganisations'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputSetUserOrganisations'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/password/set:
    post:
      tags:
      - User
      operationId: Set user password
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSetUserPassword'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/password/change:
    post:
      tags:
      - User
      operationId: Change user password
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputChangeUserPassword'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/key:
    get:
      tags:
      - User
      operationId: Get User api key
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
              example: GbxDw3j3qXi5MMCJmLEetMn5ilIjjWtZ
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - User
      operationId: Remove User api key
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/key/renew:
    post:
      tags:
      - User
      operationId: Renew User api key
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
              example: GbxDw3j3qXi5MMCJmLEetMn5ilIjjWtZ
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/avatar:
    get:
      tags:
      - User
      operationId: Get User avatar
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation:
    post:
      tags:
      - Organisation
      operationId: Create Organisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateOrganisation'
          multipart/form-data:
            schema:
              required:
              - _json
              - avatar
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputCreateOrganisation'
                avatar:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputOrganisation'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation/{orgId}:
    get:
      tags:
      - Organisation
      operationId: Get Organisation
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputOrganisation'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Organisation
      operationId: Update Organisation
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateOrganisation'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation/{orgId}/avatar/{fileHash}:
    get:
      tags:
      - Organisation
      operationId: Get Organisation avatar
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: fileHash
        in: path
        required: true
        schema:
          type: string
      - name: If-None-Match
        in: header
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            ETag:
              required: false
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '304':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation/{orgId}/link/{otherOrgId}:
    put:
      tags:
      - Organisation
      operationId: Link Organisations
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: otherOrgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputOrganisationLink'
        required: false
      responses:
        '201':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Organisation
      operationId: Unlink Organisations
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: otherOrgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation/{orgId}/links:
    get:
      tags:
      - Organisation
      operationId: List Organisation links
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputOrganisationLink'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    put:
      tags:
      - Organisation
      operationId: Bulk link Organisations
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputOrganisationBulkLink'
        required: true
      responses:
        '201':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/sharingProfile:
    get:
      tags:
      - Organisation
      operationId: List Sharing Profiles
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputSharingProfile'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/customField:
    get:
      tags:
      - CustomField
      operationId: List CustomFields
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputCustomField'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    post:
      tags:
      - CustomField
      operationId: Create CustomField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCustomField'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCustomField'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/customField/{customFieldId}:
    delete:
      tags:
      - CustomField
      operationId: Delete CustomField
      parameters:
      - name: customFieldId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: force
        in: query
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - CustomField
      operationId: Update CustomField
      parameters:
      - name: customFieldId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCustomField'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alertStatus:
    post:
      tags:
      - AlertStatus
      operationId: Create AlertStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateAlertStatus'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAlertStatus'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - alert.customStatus
  /api/v1/alertStatus/{id}:
    delete:
      tags:
      - AlertStatus
      operationId: Delete AlertStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - alert.customStatus
    patch:
      tags:
      - AlertStatus
      operationId: Update AlertStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateAlertStatus'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - alert.customStatus
  /api/v1/caseStatus:
    post:
      tags:
      - CaseStatus
      operationId: Create CaseStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCaseStatus'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseStatus'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.customStatus
  /api/v1/caseStatus/{id}:
    delete:
      tags:
      - CaseStatus
      operationId: Delete CaseStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.customStatus
    patch:
      tags:
      - CaseStatus
      operationId: Update CaseStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCaseStatus'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.customStatus
  /api/v1/taxonomy:
    post:
      tags:
      - Taxonomy
      operationId: Create Taxonomy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTaxonomy'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTaxonomy'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy/import-zip:
    post:
      tags:
      - Taxonomy
      operationId: Import from zip file
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputTaxonomyFile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ok'
        '207':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkWithErrors'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy/{taxonomyId}/activate:
    put:
      tags:
      - Taxonomy
      operationId: Activate Taxonomy
      parameters:
      - name: taxonomyId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy/{taxonomyId}/deactivate:
    put:
      tags:
      - Taxonomy
      operationId: Deactivate Taxonomy
      parameters:
      - name: taxonomyId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy/{taxonomyId}:
    get:
      tags:
      - Taxonomy
      operationId: Get Taxonomy
      parameters:
      - name: taxonomyId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTaxonomy'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Taxonomy
      operationId: Delete Taxonomy
      parameters:
      - name: taxonomyId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/profile:
    post:
      tags:
      - Profile
      operationId: Create Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProfile'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - users.customProfiles
  /api/v1/profile/{profileId}:
    get:
      tags:
      - Profile
      operationId: Get Profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProfile'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Profile
      operationId: Delete Profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - users.customProfiles
    patch:
      tags:
      - Profile
      operationId: Update Profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateProfile'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - users.customProfiles
  /api/v1/case/{caseId}/shares:
    get:
      tags:
      - Case
      operationId: List Shares of Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    put:
      tags:
      - Case
      description: "Set the share for a case with other organisations. \nFor each\
        \ organisation, you can define a profile (level of access) that the org will\
        \ receive\n\nContrary to the POST, this request can delete and update already\
        \ existing shares"
      operationId: Set shares for Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateShares'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    post:
      tags:
      - Case
      description: "Share the case with other organisations. \nFor each organisation,\
        \ you can define a profile (level of access) that the org will receive\n\n\
        This request will only create new shares and will not update or delete existing\
        \ shares"
      operationId: Share a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateShares'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Case
      operationId: Unshare a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRemoveShares'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/shares:
    get:
      tags:
      - Task
      operationId: List Shares of Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    post:
      tags:
      - Task
      description: |
        Share a task with an organisation.
        The case must already be shared with the target organisations. See 'Share a Case'
      operationId: Share a Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateShare'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Task
      operationId: Unshare a Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRemoveShares'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/{observableId}/shares:
    get:
      tags:
      - Observable
      operationId: List Shares of Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    post:
      tags:
      - Observable
      description: |
        Share an observable with an organisation.
        The case must already be shared with the target organisations. See 'Share a Case'
      operationId: Share an Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateShare'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Observable
      operationId: Unshare an Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRemoveShares'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/share/{shareId}:
    delete:
      tags:
      - Case
      operationId: Remove a Share from Case
      parameters:
      - name: shareId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Share
      operationId: Update a Share
      parameters:
      - name: shareId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateShare'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/shares:
    delete:
      tags:
      - Share
      operationId: Delete Shares by shareId
      requestBody:
        content:
          application/json:
            schema:
              required:
              - ids
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                    description: The _id of the entity or its 'name' (depends of the
                      entity)
                    example: ~354
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/log/set/{packageName}/{level}:
    get:
      tags:
      - Admin
      operationId: Update Log Level
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          type: string
      - name: level
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InputLogLevel'
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/check/_all/trigger:
    get:
      tags:
      - Admin
      operationId: Trigger all checks
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/check/{name}/trigger:
    get:
      tags:
      - Admin
      operationId: Trigger integrity check
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/check/{name}/global/trigger:
    post:
      tags:
      - Admin
      operationId: Trigger integrity check
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/check/{name}/dedup/trigger:
    post:
      tags:
      - Admin
      operationId: Trigger integrity check
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/check/cancel:
    post:
      tags:
      - Admin
      operationId: Trigger integrity check
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/check/stats:
    get:
      tags:
      - Admin
      operationId: Get check stats
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/index/status:
    get:
      tags:
      - Admin
      operationId: Get index status
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/index/{name}/reindex:
    post:
      tags:
      - Admin
      description: This does not rebuild the index mapping
      operationId: Reindex data
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/index/{name}/rebuild:
    post:
      tags:
      - Admin
      description: This will recreate the index mapping and reindex all the data
      operationId: Rebuild index
      parameters:
      - name: name
        in: path
        description: use 'all' for all indexes
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/schema/repair/{schemaName}:
    post:
      tags:
      - Admin
      operationId: Repair schema
      parameters:
      - name: schemaName
        in: path
        required: true
        schema:
          type: string
      - name: select
        in: query
        required: false
        schema:
          type: string
      - name: filter
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/schema/info/{schemaName}:
    post:
      tags:
      - Admin
      operationId: Schema info
      parameters:
      - name: schemaName
        in: path
        required: true
        schema:
          type: string
      - name: select
        in: query
        required: false
        schema:
          type: string
      - name: filter
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/describe/{model}:
    get:
      tags:
      - Describe
      operationId: Describe a model
      parameters:
      - name: model
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputEntityDescription'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/describe/_all:
    get:
      tags:
      - Describe
      operationId: Describe all models
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_OutputEntityDescription'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license/current:
    get:
      tags:
      - License
      operationId: Get current License
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputLicenseCurrent'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license/{licenseId}:
    get:
      tags:
      - License
      operationId: Get License
      parameters:
      - name: licenseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputLicense'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license:
    get:
      tags:
      - License
      operationId: List all licenses
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_OutputLicense'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    post:
      tags:
      - License
      operationId: Add License and Activate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputLicense'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license/{licenseId}/activate:
    put:
      tags:
      - License
      operationId: Activate License
      parameters:
      - name: licenseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license/challenge:
    get:
      tags:
      - License
      operationId: Get Challenge
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/catalog:
    post:
      tags:
      - Att&ck
      operationId: Create Catalog of TTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCatalogOfPattern'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCatalogOfPattern'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/catalog/{catalogId}:
    delete:
      tags:
      - Att&ck
      operationId: Delete a Catalog of TTP
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Att&ck
      operationId: Update Catalog of TTP
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCatalogOfPattern'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/pattern/import/attack:
    post:
      tags:
      - Att&ck
      description: You can import a MITRE Att&ck catalog either by providing a json
        file or by passing the url pointing to a json of the catalog
      operationId: Import MITRE Att&ck file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputPatternImportMitre'
          multipart/form-data:
            schema:
              required:
              - _json
              - file
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputPatternImportMitre'
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '207':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/pattern/{patternId}:
    get:
      tags:
      - Att&ck
      operationId: Get Pattern
      parameters:
      - name: patternId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPattern'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Att&ck
      operationId: Delete Pattern
      parameters:
      - name: patternId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/pattern/case/{caseId}:
    get:
      tags:
      - Att&ck
      operationId: Get Case Patterns
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputPattern'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/type/{typeId}:
    get:
      tags:
      - Observable Type
      operationId: Get Observable Type
      parameters:
      - name: typeId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputObservableType'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Observable Type
      operationId: Delete Observable Type
      parameters:
      - name: typeId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/type:
    post:
      tags:
      - Observable Type
      operationId: Create Observable Type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputObservableType'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputObservableType'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/status/public:
    get:
      tags:
      - Status
      operationId: Get platform public status
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPublicStatus'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
  /api/v1/status:
    get:
      tags:
      - Status
      operationId: Get platform status
      parameters:
      - name: verbose
        in: query
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputStatus'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/stream:
    post:
      tags:
      - Audit
      operationId: Create a stream of audits
      responses:
        '200':
          description: The id of the created stream
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/stream/{streamId}:
    get:
      tags:
      - Audit
      operationId: Get a stream of audits
      parameters:
      - name: streamId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputStreamAudit'
        '220':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputStreamAudit'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/flow:
    get:
      tags:
      - Audit
      operationId: Get flow of audit
      parameters:
      - name: rootId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputStreamAudit'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/action:
    post:
      tags:
      - Cortex
      operationId: Create an action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAction'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAction'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/action/{entityType}/{entityId}:
    get:
      tags:
      - Cortex
      operationId: Get action by entity
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputAction'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/analyzer:
    get:
      tags:
      - Cortex
      operationId: List Analyzers
      parameters:
      - name: range
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputWorker'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/analyzer/type/{dataType}:
    get:
      tags:
      - Cortex
      operationId: List Analyzers by type
      parameters:
      - name: dataType
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputWorker'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/analyzer/{analyzerId}:
    get:
      tags:
      - Cortex
      operationId: Get Analyzer by id
      parameters:
      - name: analyzerId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputWorker'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/job:
    post:
      tags:
      - Cortex
      operationId: Create Cortex job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputJob'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputJob'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/job/{jobId}:
    get:
      tags:
      - Cortex
      operationId: Get Cortex Job
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputJob'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/analyzer/template/content/{analyzerId}:
    get:
      tags:
      - Cortex
      operationId: Get Analyzer Template content
      parameters:
      - name: analyzerId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/analyzer/template/_import:
    post:
      tags:
      - Cortex
      operationId: Import Analyzer Templates
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputAnalyzerTemplateFiles'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_Boolean'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/analyzer/template:
    post:
      tags:
      - Cortex
      operationId: Create Analyzer Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAnalyzerTemplate'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAnalyzerTemplate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/analyzer/template/{analyzerTemplateId}:
    delete:
      tags:
      - Cortex
      operationId: Delete Analyzer Template
      parameters:
      - name: analyzerTemplateId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Cortex
      operationId: Update Analyzer Template
      parameters:
      - name: analyzerTemplateId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAnalyzerTemplateUpdate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAnalyzerTemplate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/cortex/responder/{entityType}/{entityId}:
    get:
      tags:
      - Cortex
      operationId: List responders
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputWorker'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/misp/status:
    get:
      tags:
      - MISP
      operationId: Get MISP status
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/misp/_syncAlerts:
    get:
      tags:
      - MISP
      operationId: Sync with MISP servers
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/connector/misp/export/{caseId}/{mispName}:
    post:
      tags:
      - MISP
      operationId: Export Case to MISP
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: mispName
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/connector/misp/case/import:
    post:
      tags:
      - MISP
      operationId: Import Case from MISP
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - _json
              - file
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputImportCase1'
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/function:
    post:
      tags:
      - Function
      description: "\nCreate a function that can then be invoked from an endpoint\
        \ on TheHive.\nThis function will be able to format and process your data\
        \ in a custom manner and invoke TheHive APIs.\nAll TheHive APIs will be called\
        \ with the role and permissions of the user invoking the function.\n\nCheck\
        \ also the endpoint \"Test Function\" to try and test your functions.\n\n\
        Functions currently only support javascript.\n\n### Function Example\n\nYou\
        \ can pass a script written in javascript. This script must contain one function\
        \ named `handle` \n\n```javascript\n// Your script should have a function\
        \ named 'handle'\n// input is the json value that is passed when calling the\
        \ script http endpoint\n// context is an object used to interact with TheHiveAPI\n\
        function handle(input, context) {\n  const myAlert = {\n    \"type\": \"myScript\"\
        ,\n    \"source\": input.source,\n    \"sourceRef\": input.ref,\n    \"title\"\
        : input.title || \"Default Title\",\n    \"description\": \"Alert from myScript\
        \ \" + input.ref,\n    \"observables\": input.data.map(a => { \n       return\
        \ {\n         \"dataType\": a.type,\n         \"data\": a.value\n       };\n\
        \    })\n  };\n  // call TheHive API to create an alert\n  const createdAlert\
        \ = context.alert.create(myAlert);\n  console.log(`Alert created with id ${createdAlert\
        \ && createdAlert._id}`);\n  return createdAlert;\n}\n```\n\nSee: https://www.graalvm.org/22.1/reference-manual/js/JavaScriptCompatibility/\
        \ for javascript compatibility features\n\n#### Hello world example\n\n```javascript\n\
        function handle(input, context) {\n  console.log(\"Hello from TheHive\");\n\
        \  return \"Hello world\";\n}\n```\n\n"
      operationId: Create Function
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputFunction'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputFunction'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - functions
  /api/v1/function/{function}:
    post:
      tags:
      - Function
      operationId: Invoke Function
      parameters:
      - name: function
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: dryRun
        in: query
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema: {}
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputInvokeFunctionOk'
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - functions
  /api/v1/function/{functionId}:
    get:
      tags:
      - Function
      operationId: Get Function
      parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputFunction'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - functions
    delete:
      tags:
      - Function
      operationId: Delete Function
      parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - functions
    patch:
      tags:
      - Function
      operationId: Update Function
      parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateFunction'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - functions
  /api/v1/function/_test:
    post:
      tags:
      - Function
      description: Allow to test the code of a function without saving it into the
        database
      operationId: Test Function
      parameters:
      - name: dryRun
        in: query
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTestFunction'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputInvokeFunctionOk'
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/function/_context/documentation:
    get:
      tags:
      - Function
      operationId: Get documentation for the context object
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputContextDocumentation'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseReportTemplate:
    post:
      tags:
      - Case Report Template
      description: Create a new case report template
      operationId: Create case report template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCaseReportTemplate'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseReportTemplate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
  /api/v1/caseReportTemplate/{templateId}:
    get:
      tags:
      - Case Report Template
      operationId: Get case report template
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseReportTemplate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
  /api/v1/caseReportTemplate/{idOrName}:
    delete:
      tags:
      - Case Report Template
      operationId: Delete case report template
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
    patch:
      tags:
      - Case Report Template
      operationId: Update case report template
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCaseReportTemplate'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
  /api/v1/caseReportTemplate/_info:
    get:
      tags:
      - Case Report Template
      operationId: Get case report template options
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseReportTemplateObjects'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseReportTemplate/{templateId}/attachment:
    post:
      tags:
      - Case Report Template
      operationId: Create Attachment to Case Report Template
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputAttachmentsFile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAttachments'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseReportTemplate/{templateId}/attachment/{attachmentId}:
    get:
      tags:
      - Case Report Template
      operationId: Get Attachment for Case Report Template
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: If-None-Match
        in: header
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            ETag:
              required: false
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '304':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Case Report Template
      operationId: Delete Attachment for Case Report Template
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseReportTemplate/{templateId}/attachment/{attachmentId}/download:
    get:
      tags:
      - Case Report Template
      operationId: Download Attachment for Case Report Template
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: the content-type of the file
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            Content-Disposition:
              description: will be of kind attachment with the filename
              required: true
              schema:
                type: string
            Content-Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseReport/render:
    get:
      tags:
      - Case Report
      description: Same as render but uses a GET http and cannot take a description
        as input
      operationId: Render Case Report Template (GET)
      parameters:
      - name: format
        in: query
        required: true
        schema:
          type: string
      - name: caseReportTemplateId
        in: query
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: caseId
        in: query
        required: false
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      - name: maxElements
        in: query
        required: false
        schema:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: the content-type of the renderer
              required: true
              schema:
                type: string
            Content-Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
    post:
      tags:
      - Case Report
      description: |
        Make a render for a case report template. This will output the rendering of the template but the rendering will not be saved.

        `caseId` is optional. If not provided, fake data will be used.

        You can either provide a full report definition or use an existing case report template
      operationId: Render Case Report Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRenderCaseReport'
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: the content-type of the renderer
              required: true
              schema:
                type: string
            Content-Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
  /api/v1/case/{caseId}/report:
    post:
      tags:
      - Case Report
      description: Create a report from a case and a report template
      operationId: Generate Case Report
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputGenerateCaseReport'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseReport'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
  /api/v1/case/{caseId}/report/upload:
    post:
      tags:
      - Case Report
      description: Upload a report from an existing file
      operationId: Upload Case Report
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputUploadCaseReport'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseReport'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
  /api/v1/caseReport/{reportId}/download:
    get:
      tags:
      - Case Report
      description: Download content of the case report
      operationId: Download Case Report
      parameters:
      - name: reportId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: the content-type of the file
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            Content-Disposition:
              description: will be of kind attachment with the filename
              required: true
              schema:
                type: string
            Content-Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
  /api/v1/caseReport/{reportId}:
    delete:
      tags:
      - Case Report
      operationId: Delete Case Report
      parameters:
      - name: reportId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
    patch:
      tags:
      - Case Report
      description: Update and replace the content of the case report
      operationId: Update Case Report
      parameters:
      - name: reportId
        in: path
        required: true
        schema:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputUpdateCaseReport'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
  /api/v1/caseReport/formats:
    get:
      tags:
      - Case Report
      operationId: List supported formats
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseReportFormats'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
      x-TheHive-capabilities:
      - case.reporting
components:
  schemas:
    AlertField:
      type: string
      enum:
      - _id
      - type
      - source
      - sourceRef
      - externalLink
      - title
      - description
      - severity
      - date
      - tags
      - tlp
      - pap
      - status
      - stage
      - assignee
      - summary
      - inProgressDate
      - closedDate
      - importedDate
      - timeToDetect
      - timeToTriage
      - timeToQualify
      - timeToAcknowledge
      - _createdAt
      - _createdBy
      - _updatedAt
      - _updatedBy
    AlertList:
      required:
      - _kind
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/AlertField'
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/FieldDirection'
            - $ref: '#/components/schemas/Map_Direction'
            - type: string
              example: +_createdAt
        maxElements:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        _kind:
          $ref: '#/components/schemas/Kind'
    AlertTable:
      required:
      - _kind
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/AlertField'
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/FieldDirection'
            - $ref: '#/components/schemas/Map_Direction'
            - type: string
              example: +_createdAt
        maxElements:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        _kind:
          $ref: '#/components/schemas/Kind'
    CaseReportTemplateDefinition:
      required:
      - i18n
      type: object
      properties:
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/Widget'
        header:
          $ref: '#/components/schemas/HeaderWidget'
        footer:
          $ref: '#/components/schemas/FooterWidget'
        dateFormat:
          type: string
          default: yyyy-MM-dd
        i18n:
          $ref: '#/components/schemas/I18n'
    CustomFieldType:
      type: string
      enum:
      - string
      - integer
      - float
      - boolean
      - date
      - url
    CustomFields:
      required:
      - _id
      - _kind
      type: object
      properties:
        _id:
          type: string
        _kind:
          $ref: '#/components/schemas/Kind'
    CustomFieldsList:
      required:
      - _id
      - _kind
      type: object
      properties:
        _id:
          type: string
        _kind:
          $ref: '#/components/schemas/Kind'
    DashboardStatus:
      type: string
      enum:
      - Private
      - Shared
      - Deleted
    Direction:
      type: string
      enum:
      - asc
      - desc
    Error:
      required:
      - file
      - error
      - status
      type: object
      properties:
        file:
          type: string
        error:
          type: string
        status:
          type: string
    FieldDirection:
      required:
      - field
      - direction
      type: object
      properties:
        field:
          type: string
        direction:
          $ref: '#/components/schemas/Direction'
    FieldFromTo:
      required:
      - _field
      - _from
      - _to
      type: object
      properties:
        _field:
          type: string
        _from: {}
        _to: {}
    FieldValue:
      required:
      - _field
      - _value
      type: object
      properties:
        _field:
          type: string
        _value: {}
    FieldValues:
      required:
      - _field
      type: object
      properties:
        _field:
          type: string
        _values:
          type: array
          items: {}
    Filter:
      oneOf:
      - $ref: '#/components/schemas/_and'
      - $ref: '#/components/schemas/_any'
      - $ref: '#/components/schemas/_between'
      - $ref: '#/components/schemas/_contains'
      - $ref: '#/components/schemas/_endsWith'
      - $ref: '#/components/schemas/_eq'
      - $ref: '#/components/schemas/_gt'
      - $ref: '#/components/schemas/_gte'
      - $ref: '#/components/schemas/_id'
      - $ref: '#/components/schemas/_in'
      - $ref: '#/components/schemas/_like'
      - $ref: '#/components/schemas/_lt'
      - $ref: '#/components/schemas/_lte'
      - $ref: '#/components/schemas/_match'
      - $ref: '#/components/schemas/_ne'
      - $ref: '#/components/schemas/_not'
      - $ref: '#/components/schemas/_or'
      - $ref: '#/components/schemas/_startsWith'
    FooterWidget:
      required:
      - template
      type: object
      properties:
        template:
          type: string
    HeaderWidget:
      required:
      - template
      type: object
      properties:
        template:
          type: string
    I18n:
      required:
      - observable
      - task
      - log
      - ttp
      - alert
      type: object
      properties:
        lang:
          type: string
        observable:
          $ref: '#/components/schemas/Map_String'
        task:
          $ref: '#/components/schemas/Map_String'
        log:
          $ref: '#/components/schemas/Map_String'
        ttp:
          $ref: '#/components/schemas/Map_String'
        alert:
          $ref: '#/components/schemas/Map_String'
    Image:
      required:
      - attachmentId
      - _kind
      type: object
      properties:
        attachmentId:
          type: string
          example: ~354
        _kind:
          $ref: '#/components/schemas/Kind'
    Imported:
      required:
      - namespace
      - numberOfTags
      - status
      type: object
      properties:
        namespace:
          type: string
        numberOfTags:
          type: integer
          format: int32
        status:
          type: string
    InputAction:
      required:
      - responderId
      - objectType
      - objectId
      type: object
      properties:
        responderId:
          type: string
        cortexId:
          type: string
        objectType:
          type: string
        objectId:
          type: string
        parameters:
          $ref: '#/components/schemas/JsObject'
        tlp:
          type: integer
          format: int32
    InputAddAttachments:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: string
            format: binary
    InputAlertStage:
      type: string
      description: Tell which alert stage (~=category) this status will belong to
      enum:
      - New
      - InProgress
      - Closed
      - Imported
    InputAlertsMergeWithCase:
      required:
      - caseId
      type: object
      properties:
        caseId:
          type: string
          description: Case id or number
          example: ~354
        alertIds:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
          description: List of alert ids
    InputAnalyzerTemplate:
      required:
      - analyzerId
      - content
      type: object
      properties:
        analyzerId:
          type: string
        content:
          type: string
    InputAnalyzerTemplateFiles:
      required:
      - templates
      type: object
      properties:
        templates:
          type: string
          format: binary
    InputAnalyzerTemplateUpdate:
      type: object
      properties:
        content:
          type: string
    InputApplyCaseTemplateWithIds:
      required:
      - ids
      - caseTemplate
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
        caseTemplate:
          type: string
          description: Id or name of the CaseTemplate to apply
          example: ~354
        updateTitlePrefix:
          type: boolean
          default: false
        updateDescription:
          type: boolean
          default: false
        updateTags:
          type: boolean
          default: false
        updateSeverity:
          type: boolean
          default: false
        updateFlag:
          type: boolean
          default: false
        updateTlp:
          type: boolean
          default: false
        updatePap:
          type: boolean
          default: false
        updateCustomFields:
          type: boolean
          default: false
        importTasks:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
          description: Define which tasks to import in the case
        importPages:
          type: array
          items:
            type: string
            example: ~354
          description: Define which pages to import in the case
    InputAttachment:
      required:
      - name
      - contentType
      - id
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
        contentType:
          type: string
          minLength: 1
          maxLength: 128
        id:
          type: string
          minLength: 1
          maxLength: 128
      description: existing attachment in TheHive
    InputAttachmentsFile:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: string
            format: binary
        canRename:
          type: boolean
          description: If set to `true`, the files can be renamed if they already
            exist with the same name
    InputBulkProcedure:
      type: object
      properties:
        procedures:
          type: array
          items:
            $ref: '#/components/schemas/InputProcedure'
    InputCaseStage:
      type: string
      description: Tell which case stage (~=category) this status will belong to
      enum:
      - New
      - InProgress
      - Closed
    InputCatalogOfPattern:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
        description:
          type: string
          maxLength: 1048576
        variant:
          type: string
          minLength: 1
          maxLength: 128
    InputChangeCaseOwnership:
      required:
      - organisation
      type: object
      properties:
        organisation:
          type: string
          description: Id or name of the new organisation that should own the case
          example: ~354
        keepProfile:
          type: string
          description: Set a Profile to keep an access to the case, if none is set
            the current organisation will no longer have access to the case
          example: ~354
        taskRule:
          type: string
          minLength: 1
          maxLength: 128
        observableRule:
          type: string
          minLength: 1
          maxLength: 128
    InputChangeDashboardOwnership:
      required:
      - user
      type: object
      properties:
        user:
          type: string
          description: Id or login of the new user that should own the dashboard
          example: ~354
    InputChangeUserPassword:
      required:
      - password
      - currentPassword
      type: object
      properties:
        password:
          type: string
          minLength: 1
          maxLength: 128
        currentPassword:
          type: string
          minLength: 1
          maxLength: 128
    InputComment:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          maxLength: 1048576
    InputCreateAlert:
      required:
      - type
      - source
      - sourceRef
      - title
      - description
      type: object
      properties:
        type:
          type: string
          minLength: 1
          maxLength: 32
        source:
          type: string
          minLength: 1
          maxLength: 32
        sourceRef:
          type: string
          minLength: 1
          maxLength: 128
        externalLink:
          type: string
          minLength: 1
          maxLength: 512
        title:
          type: string
          minLength: 1
          maxLength: 512
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
        date:
          type: integer
          format: datetime_ms
          default: now()
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        summary:
          type: string
          maxLength: 1048576
        status:
          type: string
          minLength: 1
          maxLength: 64
        assignee:
          type: string
          description: User to assign the alert to
          minLength: 1
          maxLength: 128
        caseTemplate:
          type: string
          minLength: 1
          maxLength: 128
        observables:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateObservable'
        procedures:
          type: array
          items:
            $ref: '#/components/schemas/InputProcedure'
          description: List of procedures (TTPs) to link the alert to
    InputCreateAlertStatus:
      required:
      - value
      - stage
      type: object
      properties:
        value:
          type: string
          description: Name of the status
          minLength: 1
          maxLength: 64
        stage:
          $ref: '#/components/schemas/InputAlertStage'
        order:
          type: integer
          description: Used to order the values in the ui
          format: int32
        description:
          type: string
          maxLength: 1048576
        colour:
          type: string
          description: Optional color to use in the ui
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputCreateCase:
      required:
      - title
      - description
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 512
        description:
          type: string
          description: Description of the case, supports markdown
          maxLength: 1048576
        severity:
          type: integer
          format: int32
          default: 2
          enum:
          - 1
          - 2
          - 3
          - 4
        startDate:
          type: integer
          format: datetime_ms
          default: now()
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        flag:
          type: boolean
          default: false
        tlp:
          type: integer
          format: int32
          default: 2
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          default: 2
          enum:
          - 0
          - 1
          - 2
          - 3
        status:
          type: string
          default: New
          minLength: 1
          maxLength: 64
        summary:
          type: string
          maxLength: 1048576
        assignee:
          type: string
          description: User to assign the case to
          minLength: 1
          maxLength: 128
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        caseTemplate:
          type: string
          description: Name or id of the Case Template to use
          minLength: 1
          maxLength: 128
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateTask'
          description: Tasks to create. If null, tasks from the Case Template will
            be used
        pages:
          type: array
          items:
            $ref: '#/components/schemas/InputCreatePage'
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
        taskRule:
          type: string
          minLength: 1
          maxLength: 128
        observableRule:
          type: string
          minLength: 1
          maxLength: 128
    InputCreateCaseFromAlert:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 512
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        status:
          type: string
          minLength: 1
          maxLength: 64
        summary:
          type: string
          maxLength: 1048576
        assignee:
          type: string
          description: User to assign the case to
          minLength: 1
          maxLength: 128
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        caseTemplate:
          type: string
          description: Name or id of the Case Template to use
          minLength: 1
          maxLength: 128
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateTask'
          description: Additional tasks to create
        pages:
          type: array
          items:
            $ref: '#/components/schemas/InputCreatePage'
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
        taskRule:
          type: string
          minLength: 1
          maxLength: 128
        observableRule:
          type: string
          minLength: 1
          maxLength: 128
    InputCreateCaseReportTemplate:
      required:
      - title
      - definition
      type: object
      properties:
        title:
          type: string
        group:
          type: string
        description:
          type: string
          maxLength: 1048576
        definition:
          $ref: '#/components/schemas/CaseReportTemplateDefinition'
        version:
          type: integer
          format: int32
    InputCreateCaseStatus:
      required:
      - value
      - stage
      type: object
      properties:
        value:
          type: string
          description: Name of the status
          minLength: 1
          maxLength: 64
        stage:
          $ref: '#/components/schemas/InputCaseStage'
        order:
          type: integer
          description: Used to order the values in the ui
          format: int32
        description:
          type: string
          maxLength: 1048576
        colour:
          type: string
          description: Optional color to use in the ui
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputCreateCaseTemplate:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the CaseTemplate, must be unique in your organisation.
            This name can be used in your integrations, for instance when creating
            a case
          minLength: 1
          maxLength: 128
        displayName:
          type: string
          description: A friendly name displayed in the UI for the CaseTemplate
          minLength: 1
          maxLength: 128
        titlePrefix:
          type: string
          description: Prefix used when creating a case
          minLength: 1
          maxLength: 64
        description:
          type: string
          description: Description for the case. All other fields below concern the
            case that will be created from this template
          maxLength: 1048576
        severity:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        summary:
          type: string
          maxLength: 1048576
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateTask'
        pageTemplateIds:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
    InputCreateDashboard:
      required:
      - title
      - description
      - status
      - definition
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 512
        group:
          type: string
          minLength: 1
          maxLength: 32
        description:
          type: string
          maxLength: 1048576
        status:
          $ref: '#/components/schemas/DashboardStatus'
        definition:
          $ref: '#/components/schemas/JsObject'
        version:
          type: integer
          format: int32
    InputCreateLog:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          maxLength: 1048576
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        includeInTimeline:
          type: integer
          format: datetime_ms
          example: 1640000000000
        attachments:
          type: array
          items:
            type: string
            format: binary
          description: ignored with json content, use a multipart if you want to pass
            attachments
    InputCreateObservable:
      required:
      - dataType
      type: object
      properties:
        dataType:
          type: string
          minLength: 1
          maxLength: 64
        data:
          $ref: '#/components/schemas/InputObservableData'
        message:
          type: string
          maxLength: 1048576
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        attachment:
          description: Attachment must be set if the observable `dataType` has `isAttachment=true`
          oneOf:
          - $ref: '#/components/schemas/InputAttachment'
          - type: array
            items:
              $ref: '#/components/schemas/InputAttachment'
          - type: array
            items:
              type: string
              description: reference to a file attachment
          - type: string
            description: reference to a file attachment
        tlp:
          type: integer
          format: int32
          default: 2
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          default: 2
          enum:
          - 0
          - 1
          - 2
          - 3
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        ioc:
          type: boolean
          default: false
        sighted:
          type: boolean
          default: false
        sightedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        ignoreSimilarity:
          type: boolean
          default: false
        isZip:
          type: boolean
          description: If set to true, the file is unzipped using the `zipPassword`
            and each file in the zip is treated as an observable
        zipPassword:
          type: string
          minLength: 1
          maxLength: 512
    InputCreateOrganisation:
      required:
      - name
      - description
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        description:
          type: string
          maxLength: 1048576
        taskRule:
          type: string
          minLength: 1
          maxLength: 64
        observableRule:
          type: string
          minLength: 1
          maxLength: 64
        locked:
          type: boolean
    InputCreatePage:
      required:
      - title
      - content
      - category
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 512
        content:
          type: string
          maxLength: 1048576
        order:
          type: integer
          format: int32
        category:
          type: string
          minLength: 1
          maxLength: 128
    InputCreateProfile:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        permissions:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 32
    InputCreateShare:
      type: object
      properties:
        organisations:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
          description: Names or ids of the organisations
    InputCreateShares:
      type: object
      properties:
        shares:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
    InputCreateTask:
      required:
      - title
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 128
        group:
          type: string
          minLength: 1
          maxLength: 32
        description:
          type: string
          maxLength: 1048576
        status:
          type: string
          minLength: 1
          maxLength: 16
        flag:
          type: boolean
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        order:
          type: integer
          format: int32
        dueDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        assignee:
          type: string
          minLength: 1
          maxLength: 128
        mandatory:
          type: boolean
    InputCreateUser:
      required:
      - login
      - name
      - profile
      type: object
      properties:
        login:
          type: string
          description: Login the user will need to enter, this will be the main identifier
            for the user
          minLength: 1
          maxLength: 128
        name:
          type: string
          description: Name of the user
          minLength: 1
          maxLength: 128
        email:
          type: string
          minLength: 1
          maxLength: 128
        password:
          type: string
          minLength: 1
          maxLength: 128
        profile:
          type: string
          description: Profile to assign the user in the organisation
          minLength: 1
          maxLength: 64
        organisation:
          type: string
          minLength: 1
          maxLength: 128
        type:
          $ref: '#/components/schemas/InputUserType'
    InputCustomEvent:
      required:
      - date
      - title
      type: object
      properties:
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
          minLength: 1
          maxLength: 128
        description:
          type: string
          maxLength: 1048576
    InputCustomField:
      required:
      - name
      - group
      - description
      - type
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        displayName:
          type: string
          minLength: 1
          maxLength: 64
        group:
          type: string
          minLength: 1
          maxLength: 64
        description:
          type: string
          maxLength: 1048576
        type:
          $ref: '#/components/schemas/CustomFieldType'
        mandatory:
          type: boolean
        options:
          type: array
          items: {}
    InputCustomFieldValue:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: Name of a CustomField
          minLength: 1
          maxLength: 64
        value:
          description: Either a string, number or boolean depending on the CustomField
            type
        order:
          type: integer
          format: int32
    InputEntry:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          minLength: 1
          maxLength: 512
        expanded:
          type: string
          maxLength: 1048576
        colour:
          type: string
          pattern: ^#[0-9a-fA-F]{6,6}|$
        description:
          type: string
          maxLength: 1048576
        numerical_value:
          type: integer
          format: int32
    InputFunction:
      required:
      - name
      - definition
      type: object
      properties:
        name:
          type: string
          description: Name of the function, should be unique in an organisation
          minLength: 1
          maxLength: 128
        mode:
          $ref: '#/components/schemas/InputFunctionMode'
        definition:
          type: string
          description: Code of the function
          maxLength: 1048576
        description:
          type: string
          maxLength: 1048576
        config:
          $ref: '#/components/schemas/JsObject'
    InputFunctionMode:
      type: string
      enum:
      - Enabled
      - Disabled
      - DryRun
    InputGenerateCaseReport:
      required:
      - caseReportTemplateId
      - format
      type: object
      properties:
        caseReportTemplateId:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
        format:
          type: string
    InputImportCase:
      required:
      - password
      type: object
      properties:
        password:
          type: string
          description: Password to read the archive
          minLength: 1
          maxLength: 512
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
        taskRule:
          type: string
          minLength: 1
          maxLength: 128
        observableRule:
          type: string
          minLength: 1
          maxLength: 128
    InputImportCase1:
      type: object
      properties:
        caseTemplate:
          type: string
        assignee:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateTask'
        pages:
          type: array
          items:
            $ref: '#/components/schemas/InputCreatePage'
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
        taskRule:
          type: string
        observableRule:
          type: string
    InputJob:
      required:
      - analyzerId
      - cortexId
      - artifactId
      type: object
      properties:
        analyzerId:
          type: string
        cortexId:
          type: string
        artifactId:
          type: string
          description: == observableId field
        parameters:
          $ref: '#/components/schemas/JsObject'
    InputLicense:
      required:
      - license
      type: object
      properties:
        license:
          type: string
    InputLinkPageTemplatesToCaseTemplate:
      type: object
      properties:
        pageTemplateIds:
          type: array
          items:
            type: string
            example: ~354
    InputLogLevel:
      type: string
      enum:
      - ALL
      - TRACE
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - 'OFF'
    InputObservableData:
      description: Either `data` or `attachment` must be set depending on the dataType
      oneOf:
      - type: array
        items:
          type: string
          minLength: 1
          maxLength: 4096
      - type: string
    InputObservableType:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        isAttachment:
          type: boolean
    InputOrganisationBulkLink:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationLink'
    InputOrganisationLink:
      type: object
      properties:
        linkType:
          type: string
          minLength: 1
          maxLength: 64
        otherLinkType:
          type: string
          minLength: 1
          maxLength: 64
    InputPatternImportMitre:
      required:
      - catalog
      type: object
      properties:
        url:
          type: string
          minLength: 1
          maxLength: 512
        catalog:
          type: string
          description: Either a name or id of an existing catalog in TheHive or if
            a catalog with this name does not exists, one will be created
          minLength: 1
          maxLength: 128
        variant:
          type: string
          minLength: 1
          maxLength: 128
    InputPredicate:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          minLength: 1
          maxLength: 512
        expanded:
          type: string
          maxLength: 1048576
        exclusive:
          type: boolean
        description:
          type: string
          maxLength: 1048576
        colour:
          type: string
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputProcedure:
      required:
      - patternId
      - occurDate
      type: object
      properties:
        patternId:
          type: string
          description: Id of the technique in the catalog
          minLength: 1
          maxLength: 128
        occurDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tactic:
          type: string
          description: Name of the tactic, useful if the technique belongs to several
            tactics
          minLength: 1
          maxLength: 32
        description:
          type: string
          maxLength: 1048576
    InputQuery:
      type: object
      properties:
        query:
          type: array
          items:
            $ref: '#/components/schemas/InputQueryNamedOperation'
    InputQueryFilterOperation:
      required:
      - _name
      type: object
      properties:
        _eq:
          $ref: '#/components/schemas/JsObject'
        _name:
          type: string
    InputQueryGenericOperation:
      required:
      - _name
      type: object
      properties:
        _name:
          type: string
    InputQueryNamedOperation:
      oneOf:
      - $ref: '#/components/schemas/InputQueryFilterOperation'
      - $ref: '#/components/schemas/InputQueryGenericOperation'
      - $ref: '#/components/schemas/InputQueryPagingOperation'
      - $ref: '#/components/schemas/InputQuerySortOperation'
      discriminator:
        propertyName: _name
        mapping:
          <other>: '#/components/schemas/InputQueryGenericOperation'
          _filter: '#/components/schemas/InputQueryFilterOperation'
          _sort: '#/components/schemas/InputQuerySortOperation'
          page: '#/components/schemas/InputQueryPagingOperation'
    InputQueryPagingOperation:
      required:
      - from
      - to
      - _name
      type: object
      properties:
        from:
          type: integer
          format: int32
        to:
          type: integer
          format: int32
        _name:
          type: string
    InputQuerySortOperation:
      required:
      - _name
      type: object
      properties:
        _fields:
          type: array
          items:
            $ref: '#/components/schemas/JsObject'
        _name:
          type: string
    InputRemoveShares:
      type: object
      properties:
        organisations:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
          description: Names or ids of the organisations
    InputRenderCaseReport:
      required:
      - format
      type: object
      properties:
        format:
          type: string
        definition:
          $ref: '#/components/schemas/CaseReportTemplateDefinition'
        caseReportTemplateId:
          type: string
          description: Either provide `definition` or `caseReportTemplateId`
          example: ~354
        caseId:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
        maxElements:
          type: integer
          description: Limit the number of elements in tables and lists, useful for
            a preview
          format: int32
          minimum: 0
          exclusiveMinimum: true
    InputSetUserOrganisations:
      type: object
      properties:
        organisations:
          type: array
          items:
            $ref: '#/components/schemas/InputUserOrganisation'
    InputSetUserPassword:
      required:
      - password
      type: object
      properties:
        password:
          type: string
          minLength: 1
          maxLength: 128
    InputShare:
      required:
      - organisation
      type: object
      properties:
        organisation:
          type: string
          description: Name or id of the organisation
          example: ~354
        share:
          type: boolean
          description: If true, new observables and tasks will also be shared to the
            organisation
          default: true
        profile:
          type: string
          description: Profile used to define the permissions of the organisation
            members
          default: analyst
          minLength: 1
          maxLength: 64
        taskRule:
          type: string
          description: Sharing rule to apply to the tasks, can be manual or autoShare
          default: Sharing rule applied on the case
          minLength: 1
          maxLength: 64
        observableRule:
          type: string
          description: Sharing rule to apply to the observables, can be manual or
            autoShare
          default: Sharing rule applied on the case
          minLength: 1
          maxLength: 64
    InputTOTPCode:
      required:
      - code
      - secret
      type: object
      properties:
        code:
          type: integer
          format: int32
        secret:
          type: string
    InputTaxonomy:
      required:
      - namespace
      - description
      - version
      type: object
      properties:
        namespace:
          type: string
          minLength: 1
          maxLength: 128
        description:
          type: string
          maxLength: 1048576
        version:
          type: integer
          format: int32
        exclusive:
          type: boolean
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/InputPredicate'
        values:
          type: array
          items:
            $ref: '#/components/schemas/InputValue'
    InputTaxonomyFile:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    InputTestFunction:
      required:
      - definition
      type: object
      properties:
        name:
          type: string
          description: Name of the function
          minLength: 1
          maxLength: 128
        definition:
          type: string
          description: Code of the function
          maxLength: 1048576
        config:
          $ref: '#/components/schemas/JsObject'
        input: {}
    InputUpdateAlert:
      type: object
      properties:
        type:
          type: string
          minLength: 1
          maxLength: 32
        source:
          type: string
          minLength: 1
          maxLength: 32
        sourceRef:
          type: string
          minLength: 1
          maxLength: 128
        externalLink:
          type: string
          format: nullable
          minLength: 1
          maxLength: 512
        title:
          type: string
          minLength: 1
          maxLength: 512
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        lastSyncDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        follow:
          type: boolean
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        status:
          type: string
          minLength: 1
          maxLength: 64
        summary:
          type: string
          format: nullable
          maxLength: 1048576
        assignee:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
        addTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be added to the current alert
        removeTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be removed from the current alert
    InputUpdateAlertStatus:
      type: object
      properties:
        order:
          type: integer
          format: int32 or null
        description:
          type: string
          format: nullable
          maxLength: 1048576
        colour:
          type: string
          format: nullable
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputUpdateAlertWithIds:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
        type:
          type: string
          minLength: 1
          maxLength: 32
        source:
          type: string
          minLength: 1
          maxLength: 32
        sourceRef:
          type: string
          minLength: 1
          maxLength: 128
        externalLink:
          type: string
          format: nullable
          minLength: 1
          maxLength: 512
        title:
          type: string
          minLength: 1
          maxLength: 512
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        lastSyncDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        follow:
          type: boolean
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        status:
          type: string
          minLength: 1
          maxLength: 64
        summary:
          type: string
          format: nullable
          maxLength: 1048576
        assignee:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
        addTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be added to the current alert
        removeTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be removed from the current alert
    InputUpdateCase:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 512
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Set the case tags to this array
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        status:
          type: string
          minLength: 1
          maxLength: 64
        summary:
          type: string
          format: nullable
          maxLength: 1048576
        assignee:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
        impactStatus:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        taskRule:
          type: string
          minLength: 1
          maxLength: 128
        observableRule:
          type: string
          minLength: 1
          maxLength: 128
        addTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be added to the current case
        removeTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be removed from the current case
    InputUpdateCaseReport:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    InputUpdateCaseReportTemplate:
      type: object
      properties:
        title:
          type: string
        group:
          type: string
        description:
          type: string
          maxLength: 1048576
        definition:
          $ref: '#/components/schemas/CaseReportTemplateDefinition'
        version:
          type: integer
          format: int32
    InputUpdateCaseStatus:
      type: object
      properties:
        order:
          type: integer
          format: int32 or null
        description:
          type: string
          format: nullable
          maxLength: 1048576
        colour:
          type: string
          format: nullable
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputUpdateCaseTemplate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
        displayName:
          type: string
          minLength: 1
          maxLength: 64
        titlePrefix:
          type: string
          format: nullable
        description:
          type: string
          format: nullable
          maxLength: 1048576
        severity:
          type: integer
          format: int32 or null
          enum:
          - 1
          - 2
          - 3
          - 4
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32 or null
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32 or null
          enum:
          - 0
          - 1
          - 2
          - 3
        summary:
          type: string
          format: nullable
          maxLength: 1048576
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateTask'
    InputUpdateCaseWithIds:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
        title:
          type: string
          minLength: 1
          maxLength: 512
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Set the case tags to this array
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        status:
          type: string
          minLength: 1
          maxLength: 64
        summary:
          type: string
          format: nullable
          maxLength: 1048576
        assignee:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
        impactStatus:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
        customFields:
          oneOf:
          - $ref: '#/components/schemas/customFieldsAsObject'
          - type: array
            items:
              $ref: '#/components/schemas/InputCustomFieldValue'
        taskRule:
          type: string
          minLength: 1
          maxLength: 128
        observableRule:
          type: string
          minLength: 1
          maxLength: 128
        addTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be added to the current case
        removeTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be removed from the current case
    InputUpdateCatalogOfPattern:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
        description:
          type: string
          format: nullable
          maxLength: 1048576
        variant:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
    InputUpdateCustomEvent:
      type: object
      properties:
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        title:
          type: string
          minLength: 1
          maxLength: 128
        description:
          type: string
          format: nullable
          maxLength: 1048576
    InputUpdateCustomField:
      type: object
      properties:
        displayName:
          type: string
          minLength: 1
          maxLength: 64
        group:
          type: string
          minLength: 1
          maxLength: 64
        description:
          type: string
          maxLength: 1048576
        type:
          $ref: '#/components/schemas/CustomFieldType'
        options:
          type: array
          items: {}
        mandatory:
          type: boolean
    InputUpdateDashboard:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 512
        group:
          type: string
          minLength: 1
          maxLength: 32
        description:
          type: string
          maxLength: 1048576
        definition:
          $ref: '#/components/schemas/JsObject'
        status:
          $ref: '#/components/schemas/DashboardStatus'
        version:
          type: integer
          format: int32
    InputUpdateFunction:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/InputFunctionMode'
        definition:
          type: string
          maxLength: 1048576
        description:
          type: string
          maxLength: 1048576
        config:
          $ref: '#/components/schemas/JsObject'
    InputUpdateLog:
      type: object
      properties:
        message:
          type: string
          maxLength: 1048576
        includeInTimeline:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
    InputUpdateObservable:
      type: object
      properties:
        dataType:
          type: string
          minLength: 1
          maxLength: 64
        message:
          type: string
          format: nullable
          maxLength: 1048576
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        ioc:
          type: boolean
        sighted:
          type: boolean
        sightedAt:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        ignoreSimilarity:
          type: boolean
        addTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be added to the current observable
        removeTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be removed from the current observable
    InputUpdateObservableWithIds:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
        dataType:
          type: string
          minLength: 1
          maxLength: 64
        message:
          type: string
          format: nullable
          maxLength: 1048576
        tlp:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        pap:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        ioc:
          type: boolean
        sighted:
          type: boolean
        sightedAt:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        ignoreSimilarity:
          type: boolean
        addTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be added to the current observable
        removeTags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
          description: Those tags will be removed from the current observable
    InputUpdateOrganisation:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        description:
          type: string
          maxLength: 1048576
        taskRule:
          type: string
          minLength: 1
          maxLength: 64
        observableRule:
          type: string
          minLength: 1
          maxLength: 64
        locked:
          type: boolean
        avatar:
          type: string
    InputUpdatePage:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 512
        content:
          type: string
          maxLength: 1048576
        order:
          type: integer
          format: int32
        category:
          type: string
          minLength: 1
          maxLength: 128
    InputUpdateProcedure:
      type: object
      properties:
        description:
          type: string
          maxLength: 1048576
        occurDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
    InputUpdateProfile:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        permissions:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 32
    InputUpdateShare:
      required:
      - profile
      type: object
      properties:
        profile:
          type: string
          minLength: 1
          maxLength: 64
    InputUpdateTask:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 128
        group:
          type: string
          minLength: 1
          maxLength: 32
        description:
          type: string
          format: nullable
          maxLength: 1048576
        status:
          type: string
          minLength: 1
          maxLength: 16
        flag:
          type: boolean
        startDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        order:
          type: integer
          format: int32
        dueDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        assignee:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
        mandatory:
          type: boolean
    InputUpdateTaskWithIds:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            description: The _id of the entity or its 'name' (depends of the entity)
            example: ~354
        title:
          type: string
          minLength: 1
          maxLength: 128
        group:
          type: string
          minLength: 1
          maxLength: 32
        description:
          type: string
          format: nullable
          maxLength: 1048576
        status:
          type: string
          minLength: 1
          maxLength: 16
        flag:
          type: boolean
        startDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        order:
          type: integer
          format: int32
        dueDate:
          type: integer
          format: datetime_ms or null
          example: 1640000000000
        assignee:
          type: string
          format: nullable
          minLength: 1
          maxLength: 128
        mandatory:
          type: boolean
    InputUpdateUser:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
        organisation:
          type: string
          description: When updating the profile, use this field to determine the
            organisation to update
          minLength: 1
          maxLength: 128
        profile:
          type: string
          description: Requires admin permission to update this field
          minLength: 1
          maxLength: 64
        locked:
          type: boolean
          description: Requires admin permission to update this field
        avatar:
          type: string
        email:
          type: string
          minLength: 1
          maxLength: 128
        defaultOrganisation:
          type: string
          minLength: 1
          maxLength: 128
        type:
          $ref: '#/components/schemas/InputUserType'
    InputUploadCaseReport:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    InputUserOrganisation:
      required:
      - organisation
      - profile
      type: object
      properties:
        organisation:
          type: string
          minLength: 1
          maxLength: 128
        profile:
          type: string
          minLength: 1
          maxLength: 64
        default:
          type: boolean
    InputUserType:
      type: string
      description: Normal or Service. A service user cannot use the ui and needs to
        provide an api key for authentication
      enum:
      - Service
      - Normal
    InputValue:
      required:
      - predicate
      type: object
      properties:
        predicate:
          type: string
          minLength: 1
          maxLength: 512
        entry:
          type: array
          items:
            $ref: '#/components/schemas/InputEntry'
    JsObject:
      type: object
    Kind:
      type: string
      enum:
      - Text
      - Image
      - CustomFields
      - CustomFieldsList
      - AlertTable
      - AlertList
      - ObservableTable
      - ObservableList
      - TaskTable
      - TaskList
      - TTPTable
      - TTPList
    Ko:
      required:
      - errors
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/Map_String'
    List_OutputLicense:
      oneOf:
      - $ref: '#/components/schemas/Nil'
      - type: array
        items:
          $ref: '#/components/schemas/OutputLicense'
    LogField:
      type: string
      enum:
      - message
      - date
      - includeInTimeline
      - _createdAt
      - _createdBy
      - _updatedAt
      - _updatedBy
    LoginInput:
      required:
      - user
      - password
      type: object
      properties:
        user:
          type: string
        password:
          type: string
        organisation:
          type: string
          description: Organisation id or name to logged into
          default: Uses user default organisation or first joined organisation
        code:
          type: string
    Map_Boolean:
      type: object
      additionalProperties:
        type: boolean
    Map_Direction:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Direction'
    Map_Int:
      type: object
      additionalProperties:
        type: integer
        format: int32
    Map_JsObject:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/JsObject'
    Map_Long:
      type: object
      additionalProperties:
        type: integer
        format: int64
    Map_Map_String_Long:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Map_Long'
    Map_OutputEntityDescription:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OutputEntityDescription'
    Map_OutputLicenseQuota:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OutputLicenseQuota'
    Map_String:
      type: object
      additionalProperties:
        type: string
    Nil:
      type: object
    ObservableField:
      type: string
      enum:
      - dataType
      - data
      - startDate
      - tlp
      - pap
      - tags
      - ioc
      - sighted
      - sightedAt
      - reports
      - message
      - _createdAt
      - _createdBy
      - _updatedAt
      - _updatedBy
    ObservableList:
      required:
      - protectData
      - _kind
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ObservableField'
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/FieldDirection'
            - $ref: '#/components/schemas/Map_Direction'
            - type: string
              example: +_createdAt
        protectData:
          type: boolean
        maxElements:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        _kind:
          $ref: '#/components/schemas/Kind'
    ObservableTable:
      required:
      - protectData
      - _kind
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/ObservableField'
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/FieldDirection'
            - $ref: '#/components/schemas/Map_Direction'
            - type: string
              example: +_createdAt
        protectData:
          type: boolean
        maxElements:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        _kind:
          $ref: '#/components/schemas/Kind'
    Ok:
      type: object
      properties:
        imported:
          type: array
          items:
            $ref: '#/components/schemas/Imported'
    OkWithErrors:
      type: object
      properties:
        imported:
          type: array
          items:
            $ref: '#/components/schemas/Imported'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    OrganisationLink:
      required:
      - toOrganisation
      - linkType
      - otherLinkType
      type: object
      properties:
        toOrganisation:
          type: string
          description: The _id of the entity or its 'name' (depends of the entity)
          example: ~354
        avatar:
          type: string
        linkType:
          type: string
          minLength: 1
          maxLength: 64
        otherLinkType:
          type: string
          minLength: 1
          maxLength: 64
    OutputAction:
      required:
      - responderId
      - objectType
      - objectId
      - status
      - startDate
      - operations
      - report
      type: object
      properties:
        responderId:
          type: string
        responderName:
          type: string
        responderDefinition:
          type: string
        cortexId:
          type: string
        cortexJobId:
          type: string
        objectType:
          type: string
        objectId:
          type: string
        status:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        operations:
          type: string
        report:
          type: string
    OutputAlert:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - type
      - source
      - sourceRef
      - title
      - description
      - severity
      - severityLabel
      - date
      - tlp
      - tlpLabel
      - pap
      - papLabel
      - follow
      - observableCount
      - status
      - stage
      - extraData
      - newDate
      - timeToDetect
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        type:
          type: string
        source:
          type: string
        sourceRef:
          type: string
        externalLink:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
          format: int32
        severityLabel:
          type: string
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        tlp:
          type: integer
          format: int32
        tlpLabel:
          type: string
        pap:
          type: integer
          format: int32
        papLabel:
          type: string
        follow:
          type: boolean
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
        caseTemplate:
          type: string
        observableCount:
          type: integer
          format: int64
        caseId:
          type: string
        status:
          type: string
        stage:
          type: string
        assignee:
          type: string
        summary:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
        newDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        inProgressDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        closedDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        importedDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        timeToDetect:
          type: integer
          format: int64
        timeToTriage:
          type: integer
          format: int64
        timeToQualify:
          type: integer
          format: int64
        timeToAcknowledge:
          type: integer
          format: int64
    OutputAlertStatus:
      required:
      - _id
      - _type
      - _createdAt
      - _createdBy
      - value
      - stage
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        value:
          type: string
        stage:
          type: string
        order:
          type: integer
          format: int32
        description:
          type: string
        colour:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputAnalyzerTemplate:
      required:
      - id
      - analyzerId
      - content
      type: object
      properties:
        id:
          type: string
        analyzerId:
          type: string
        content:
          type: string
    OutputAttachment:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - size
      - contentType
      - id
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        hashes:
          type: array
          items:
            type: string
        size:
          type: integer
          format: int64
        contentType:
          type: string
        id:
          type: string
    OutputAttachments:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/OutputAttachment'
    OutputAudit:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - action
      - requestId
      - rootId
      - details
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        action:
          type: string
        requestId:
          type: string
        rootId:
          type: string
        details:
          $ref: '#/components/schemas/JsObject'
        objectId:
          type: string
        objectType:
          type: string
        object:
          $ref: '#/components/schemas/JsObject'
        context:
          $ref: '#/components/schemas/JsObject'
    OutputCase:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - number
      - title
      - description
      - severity
      - severityLabel
      - startDate
      - flag
      - tlp
      - tlpLabel
      - pap
      - papLabel
      - status
      - stage
      - extraData
      - newDate
      - timeToDetect
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        number:
          type: integer
          description: An incremental number to reference the case. This field can
            be used in the apis in place of the _id
          format: int32
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
          format: int32
        severityLabel:
          type: string
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32
        tlpLabel:
          type: string
        pap:
          type: integer
          format: int32
        papLabel:
          type: string
        status:
          type: string
        stage:
          type: string
          description: The value of the stage depends on the status of the case. Can
            be one of 'New' 'InProgress' or 'Closed'
        summary:
          type: string
        impactStatus:
          type: string
        assignee:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
        userPermissions:
          type: array
          items:
            type: string
          description: A list of permissions the current user has access on the case.
            This depends on the profile of the user and the sharing of the Case
        extraData:
          $ref: '#/components/schemas/JsObject'
        newDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        inProgressDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        closedDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        alertDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        alertNewDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        alertInProgressDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        alertImportedDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        timeToDetect:
          type: integer
          format: int64
        timeToTriage:
          type: integer
          format: int64
        timeToQualify:
          type: integer
          format: int64
        timeToAcknowledge:
          type: integer
          format: int64
        timeToResolve:
          type: integer
          format: int64
        handlingDuration:
          type: integer
          format: int64
    OutputCaseReport:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - contentType
      - size
      - filename
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        contentType:
          type: string
        size:
          type: integer
          format: int64
        filename:
          type: string
    OutputCaseReportFormats:
      type: object
      properties:
        formats:
          type: array
          items:
            type: string
    OutputCaseReportTemplate:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - title
      - group
      - description
      - version
      - definition
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        group:
          type: string
        description:
          type: string
        version:
          type: integer
          format: int32
        definition:
          $ref: '#/components/schemas/CaseReportTemplateDefinition'
    OutputCaseReportTemplateObjects:
      type: object
      properties:
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/Kind'
        alertFields:
          type: array
          items:
            $ref: '#/components/schemas/AlertField'
        observableFields:
          type: array
          items:
            $ref: '#/components/schemas/ObservableField'
        taskFields:
          type: array
          items:
            $ref: '#/components/schemas/TaskField'
        ttpFields:
          type: array
          items:
            $ref: '#/components/schemas/TTPField'
        logFields:
          type: array
          items:
            $ref: '#/components/schemas/LogField'
    OutputCaseStatus:
      required:
      - _id
      - _type
      - _createdAt
      - _createdBy
      - value
      - stage
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        value:
          type: string
        stage:
          type: string
        order:
          type: integer
          format: int32
        description:
          type: string
        colour:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputCaseTemplate:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - displayName
      - flag
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        displayName:
          type: string
        titlePrefix:
          type: string
        description:
          type: string
        severity:
          type: integer
          format: int32
        severityLabel:
          type: string
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32
        tlpLabel:
          type: string
        pap:
          type: integer
          format: int32
        papLabel:
          type: string
        summary:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OutputTask'
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputCaseWithLinks:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - number
      - title
      - description
      - severity
      - severityLabel
      - startDate
      - flag
      - tlp
      - tlpLabel
      - pap
      - papLabel
      - status
      - stage
      - extraData
      - newDate
      - timeToDetect
      - linksCount
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        number:
          type: integer
          description: An incremental number to reference the case. This field can
            be used in the apis in place of the _id
          format: int32
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
          format: int32
        severityLabel:
          type: string
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
          format: int32
        tlpLabel:
          type: string
        pap:
          type: integer
          format: int32
        papLabel:
          type: string
        status:
          type: string
        stage:
          type: string
          description: The value of the stage depends on the status of the case. Can
            be one of 'New' 'InProgress' or 'Closed'
        summary:
          type: string
        impactStatus:
          type: string
        assignee:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
        userPermissions:
          type: array
          items:
            type: string
          description: A list of permissions the current user has access on the case.
            This depends on the profile of the user and the sharing of the Case
        extraData:
          $ref: '#/components/schemas/JsObject'
        newDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        inProgressDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        closedDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        alertDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        alertNewDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        alertInProgressDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        alertImportedDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        timeToDetect:
          type: integer
          format: int64
        timeToTriage:
          type: integer
          format: int64
        timeToQualify:
          type: integer
          format: int64
        timeToAcknowledge:
          type: integer
          format: int64
        timeToResolve:
          type: integer
          format: int64
        handlingDuration:
          type: integer
          format: int64
        linkedWith:
          type: array
          items:
            $ref: '#/components/schemas/OutputObservable'
        linksCount:
          type: integer
          format: int32
    OutputCatalogOfPattern:
      required:
      - _id
      - _type
      - createdBy
      - createdAt
      - name
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        createdBy:
          type: string
        createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        description:
          type: string
        variant:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputComment:
      required:
      - _id
      - _type
      - createdBy
      - createdAt
      - message
      - isEdited
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        createdBy:
          type: string
        createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        updatedBy:
          type: string
        message:
          type: string
        isEdited:
          type: boolean
    OutputContextDocumentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OutputContextDocumentationItem'
    OutputContextDocumentationItem:
      required:
      - name
      - kind
      type: object
      properties:
        name:
          type: string
        kind:
          $ref: '#/components/schemas/OutputContextDocumentationItemKind'
        args:
          type: array
          items:
            type: string
    OutputContextDocumentationItemKind:
      type: string
      enum:
      - Field
      - Method
    OutputCustomEvent:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - date
      - title
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        description:
          type: string
    OutputCustomField:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - displayName
      - group
      - description
      - type
      - mandatory
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        displayName:
          type: string
        group:
          type: string
        description:
          type: string
        type:
          type: string
        options:
          type: array
          items: {}
        mandatory:
          type: boolean
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputCustomFieldValue:
      required:
      - _id
      - name
      - type
      - value
      - order
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        type:
          type: string
        value: {}
        order:
          type: integer
          format: int32
    OutputDashboard:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - title
      - group
      - description
      - status
      - definition
      - writable
      - version
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        group:
          type: string
        description:
          type: string
        status:
          type: string
        owner:
          type: string
        definition:
          $ref: '#/components/schemas/JsObject'
        writable:
          type: boolean
        version:
          type: integer
          format: int32
    OutputEntityDescription:
      required:
      - label
      - path
      - initialQuery
      type: object
      properties:
        label:
          type: string
        path:
          type: string
        initialQuery:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/OutputPropertyDescription'
    OutputFunction:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - mode
      - definition
      - config
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedBy:
          type: string
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        mode:
          type: string
        definition:
          type: string
        description:
          type: string
        config:
          $ref: '#/components/schemas/JsObject'
        lastSuccessDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        lastSuccessDetails:
          $ref: '#/components/schemas/JsObject'
        lastErrorDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        lastErrorDetails:
          $ref: '#/components/schemas/JsObject'
    OutputImportCase:
      required:
      - case
      type: object
      properties:
        case:
          $ref: '#/components/schemas/OutputCase'
        observables:
          type: array
          items:
            $ref: '#/components/schemas/OutputObservable'
        procedures:
          type: array
          items:
            $ref: '#/components/schemas/OutputProcedure'
        errors:
          type: array
          items: {}
          description: Field is present if there were some errors during import
    OutputInvokeFunctionKo:
      required:
      - errorType
      - errorMessage
      - stdout
      - stderr
      type: object
      properties:
        errorType:
          type: string
        errorMessage:
          type: string
        stdout:
          type: string
          description: Content of stdout
        stderr:
          type: string
          description: Content of stderr
    OutputInvokeFunctionOk:
      required:
      - result
      - durationMillis
      - stdout
      - stderr
      type: object
      properties:
        result:
          description: The value returned by the `handle` function
        durationMillis:
          type: integer
          description: Time taken by the function
          format: int64
        stdout:
          type: string
          description: Content of stdout
        stderr:
          type: string
          description: Content of stderr
    OutputJob:
      required:
      - _type
      - analyzerId
      - analyzerName
      - analyzerDefinition
      - status
      - startDate
      - cortexId
      - cortexJobId
      - id
      - operations
      type: object
      properties:
        _type:
          type: string
        analyzerId:
          type: string
        analyzerName:
          type: string
        analyzerDefinition:
          type: string
        status:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        report:
          $ref: '#/components/schemas/JsObject'
        cortexId:
          type: string
        cortexJobId:
          type: string
        id:
          type: string
        case_artifact:
          $ref: '#/components/schemas/JsObject'
        operations:
          type: string
    OutputLicense:
      required:
      - _id
      - _createdAt
      - _createdBy
      - _type
      - id
      - customer
      - plan
      - kind
      - validFrom
      - expiresAt
      - current
      - quotas
      type: object
      properties:
        _id:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        _type:
          type: string
        id:
          type: string
        customer:
          type: string
        plan:
          type: string
        kind:
          type: string
        validFrom:
          type: integer
          format: datetime_ms
          example: 1640000000000
        expiresAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        current:
          type: boolean
        capabilities:
          type: array
          items:
            type: string
        quotas:
          $ref: '#/components/schemas/Map_Int'
    OutputLicenseCurrent:
      oneOf:
      - $ref: '#/components/schemas/OutputLicenseCurrentError'
      - $ref: '#/components/schemas/OutputLicenseCurrentNotFound'
      - $ref: '#/components/schemas/OutputLicenseCurrentOk'
    OutputLicenseCurrentError:
      required:
      - error
      - fallback
      type: object
      properties:
        error:
          type: string
        fallback:
          $ref: '#/components/schemas/OutputLicense'
    OutputLicenseCurrentNotFound:
      required:
      - fallback
      - notFound
      type: object
      properties:
        fallback:
          $ref: '#/components/schemas/OutputLicense'
        notFound:
          type: boolean
    OutputLicenseCurrentOk:
      required:
      - license
      type: object
      properties:
        license:
          $ref: '#/components/schemas/OutputLicense'
    OutputLicenseQuota:
      required:
      - quota
      type: object
      properties:
        current:
          type: integer
          format: int32
        quota:
          type: integer
          format: int32
    OutputLicenseStatus:
      required:
      - id
      - customer
      - instance
      - plan
      - kind
      - validFrom
      - expiresAt
      - isValid
      - quotas
      type: object
      properties:
        id:
          type: string
        customer:
          type: string
        instance:
          type: string
        plan:
          type: string
        kind:
          type: string
        validFrom:
          type: integer
          format: datetime_ms
          example: 1640000000000
        expiresAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        capabilities:
          type: array
          items:
            type: string
        isValid:
          type: boolean
        error:
          type: string
        quotas:
          $ref: '#/components/schemas/Map_OutputLicenseQuota'
    OutputLog:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - message
      - date
      - owner
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        message:
          type: string
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/OutputAttachment'
        owner:
          type: string
        includeInTimeline:
          type: integer
          format: datetime_ms
          example: 1640000000000
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputMergeCases:
      required:
      - untouched
      - updated
      - deleted
      type: object
      properties:
        untouched:
          type: integer
          description: Number of observables left untouched
          format: int32
        updated:
          type: integer
          description: Number of observables updated
          format: int32
        deleted:
          type: integer
          description: Number of observables deleted
          format: int32
    OutputObservable:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - dataType
      - startDate
      - tlp
      - tlpLabel
      - pap
      - papLabel
      - ioc
      - sighted
      - reports
      - extraData
      - ignoreSimilarity
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        dataType:
          type: string
        data:
          type: string
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        attachment:
          $ref: '#/components/schemas/OutputAttachment'
        tlp:
          type: integer
          format: int32
        tlpLabel:
          type: string
        pap:
          type: integer
          format: int32
        papLabel:
          type: string
        tags:
          type: array
          items:
            type: string
        ioc:
          type: boolean
        sighted:
          type: boolean
        sightedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        reports:
          $ref: '#/components/schemas/JsObject'
        message:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
        ignoreSimilarity:
          type: boolean
    OutputObservableType:
      required:
      - _id
      - _type
      - _createdAt
      - _createdBy
      - name
      - isAttachment
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        name:
          type: string
        isAttachment:
          type: boolean
    OutputOrganisation:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - description
      - taskRule
      - observableRule
      - locked
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
          description: This field can be used to reference an organisation instead
            of its _id
        description:
          type: string
        taskRule:
          type: string
        observableRule:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationLink'
        avatar:
          type: string
        locked:
          type: boolean
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputOrganisationLink:
      required:
      - linkType
      - otherLinkType
      - organisation
      type: object
      properties:
        linkType:
          type: string
        otherLinkType:
          type: string
        organisation:
          $ref: '#/components/schemas/OutputOrganisation'
    OutputOrganisationProfile:
      required:
      - organisationId
      - organisation
      - profile
      type: object
      properties:
        organisationId:
          type: string
        organisation:
          type: string
        profile:
          type: string
        avatar:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationLink'
    OutputPage:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - title
      - content
      - order
      - category
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        content:
          type: string
        order:
          type: integer
          format: int32
        category:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputPattern:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - patternId
      - name
      - url
      - patternType
      - revoked
      - remoteSupport
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        patternId:
          type: string
        name:
          type: string
        description:
          type: string
        tactics:
          type: array
          items:
            type: string
        url:
          type: string
        patternType:
          type: string
        capecId:
          type: string
        capecUrl:
          type: string
        revoked:
          type: boolean
        dataSources:
          type: array
          items:
            type: string
        defenseBypassed:
          type: array
          items:
            type: string
        detection:
          type: string
        permissionsRequired:
          type: array
          items:
            type: string
        platforms:
          type: array
          items:
            type: string
        remoteSupport:
          type: boolean
        systemRequirements:
          type: array
          items:
            type: string
        version:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputProcedure:
      required:
      - _id
      - _createdAt
      - _createdBy
      - occurDate
      - tactic
      - tacticLabel
      - extraData
      type: object
      properties:
        _id:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedBy:
          type: string
        description:
          type: string
        occurDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        patternId:
          type: string
        patternName:
          type: string
        tactic:
          type: string
        tacticLabel:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputProfile:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - editable
      - forAdmin
      - forOrg
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
        editable:
          type: boolean
        forAdmin:
          type: boolean
        forOrg:
          type: boolean
    OutputPropertyDescription:
      required:
      - name
      - type
      - aggregable
      - indexType
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        values:
          type: array
          items: {}
        labels:
          type: array
          items:
            type: string
        aggregable:
          type: boolean
        indexType:
          type: string
    OutputPublicStatus:
      required:
      - sso
      - version
      type: object
      properties:
        sso:
          type: boolean
        ssoProviders:
          type: array
          items:
            $ref: '#/components/schemas/OutputSsoProvider'
        version:
          type: string
    OutputSetUserOrganisations:
      type: object
      properties:
        organisations:
          type: array
          items:
            $ref: '#/components/schemas/OutputUserOrganisation'
    OutputShare:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - caseId
      - profileName
      - organisationName
      - owner
      - taskRule
      - observableRule
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        caseId:
          type: string
        profileName:
          type: string
        organisationName:
          type: string
        owner:
          type: boolean
        taskRule:
          type: string
        observableRule:
          type: string
    OutputSharingProfile:
      required:
      - name
      - description
      - autoShare
      - editable
      - permissionProfile
      - taskRule
      - observableRule
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        autoShare:
          type: boolean
        editable:
          type: boolean
        permissionProfile:
          type: string
        taskRule:
          type: string
        observableRule:
          type: string
    OutputSsoProvider:
      required:
      - name
      - displayName
      - url
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        url:
          type: string
    OutputStatus:
      required:
      - version
      - gitDescription
      - connectors
      - config
      - license
      type: object
      properties:
        version:
          type: string
        gitDescription:
          type: string
        connectors:
          $ref: '#/components/schemas/Map_JsObject'
        config:
          $ref: '#/components/schemas/JsObject'
        license:
          $ref: '#/components/schemas/OutputLicenseStatus'
        cluster:
          $ref: '#/components/schemas/JsObject'
        schemaStatus:
          type: array
          items:
            $ref: '#/components/schemas/JsObject'
          description: Filled when verbose
        features:
          type: array
          items:
            type: string
    OutputStreamAudit:
      required:
      - base
      - summary
      type: object
      properties:
        base:
          $ref: '#/components/schemas/OutputAudit'
        summary:
          $ref: '#/components/schemas/Map_Map_String_Long'
    OutputTOTPSecret:
      required:
      - secret
      - uri
      type: object
      properties:
        secret:
          type: string
        uri:
          type: string
    OutputTag:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - namespace
      - predicate
      - colour
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        namespace:
          type: string
        predicate:
          type: string
        value:
          type: string
        description:
          type: string
        colour:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputTask:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - title
      - group
      - status
      - flag
      - order
      - mandatory
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        group:
          type: string
        description:
          type: string
        status:
          type: string
        flag:
          type: boolean
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        assignee:
          type: string
        order:
          type: integer
          format: int32
        dueDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        mandatory:
          type: boolean
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputTaxonomy:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - namespace
      - description
      - version
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        namespace:
          type: string
        description:
          type: string
        version:
          type: integer
          format: int32
        tags:
          type: array
          items:
            $ref: '#/components/schemas/OutputTag'
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputTimeline:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/OutputTimelineEvent'
    OutputTimelineEvent:
      required:
      - date
      - kind
      - entity
      - entityId
      - details
      type: object
      properties:
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        kind:
          type: string
        entity:
          type: string
        entityId:
          type: string
          example: ~354
        details:
          $ref: '#/components/schemas/JsObject'
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
    OutputUser:
      required:
      - _id
      - _createdBy
      - _createdAt
      - login
      - name
      - hasKey
      - hasPassword
      - hasMFA
      - locked
      - profile
      - organisation
      - type
      - extraData
      type: object
      properties:
        _id:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        login:
          type: string
        name:
          type: string
        email:
          type: string
        hasKey:
          type: boolean
        hasPassword:
          type: boolean
        hasMFA:
          type: boolean
        locked:
          type: boolean
        profile:
          type: string
        permissions:
          type: array
          items:
            type: string
        organisation:
          type: string
        avatar:
          type: string
        organisations:
          type: array
          items:
            $ref: '#/components/schemas/OutputOrganisationProfile'
        type:
          type: string
        defaultOrganisation:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputUserOrganisation:
      required:
      - organisation
      - profile
      - default
      type: object
      properties:
        organisation:
          type: string
        profile:
          type: string
        default:
          type: boolean
    OutputWorker:
      required:
      - id
      - name
      - version
      - description
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        description:
          type: string
        dataTypeList:
          type: array
          items:
            type: string
        cortexIds:
          type: array
          items:
            type: string
    TTPField:
      type: string
      enum:
      - tactic
      - patternId
      - description
      - occurDate
      - _createdAt
      - _createdBy
      - _updatedAt
      - _updatedBy
    TTPList:
      required:
      - _kind
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/TTPField'
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/FieldDirection'
            - $ref: '#/components/schemas/Map_Direction'
            - type: string
              example: +_createdAt
        maxElements:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        _kind:
          $ref: '#/components/schemas/Kind'
    TTPTable:
      required:
      - _kind
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/TTPField'
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/FieldDirection'
            - $ref: '#/components/schemas/Map_Direction'
            - type: string
              example: +_createdAt
        maxElements:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        _kind:
          $ref: '#/components/schemas/Kind'
    TaskField:
      type: string
      enum:
      - group
      - title
      - description
      - status
      - flag
      - startDate
      - endDate
      - assignee
      - dueDate
      - mandatory
      - _createdAt
      - _createdBy
      - _updatedAt
      - _updatedBy
    TaskList:
      required:
      - _kind
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/TaskField'
        logColumns:
          type: array
          items:
            $ref: '#/components/schemas/LogField'
        withTaskLogs:
          type: boolean
          default: true
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/FieldDirection'
            - $ref: '#/components/schemas/Map_Direction'
            - type: string
              example: +_createdAt
        maxElements:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        _kind:
          $ref: '#/components/schemas/Kind'
    TaskTable:
      required:
      - _kind
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/TaskField'
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/FieldDirection'
            - $ref: '#/components/schemas/Map_Direction'
            - type: string
              example: +_createdAt
        maxElements:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        _kind:
          $ref: '#/components/schemas/Kind'
    Text:
      required:
      - template
      - _kind
      type: object
      properties:
        template:
          type: string
        _kind:
          $ref: '#/components/schemas/Kind'
    Widget:
      oneOf:
      - $ref: '#/components/schemas/AlertList'
      - $ref: '#/components/schemas/AlertTable'
      - $ref: '#/components/schemas/CustomFields'
      - $ref: '#/components/schemas/CustomFieldsList'
      - $ref: '#/components/schemas/Image'
      - $ref: '#/components/schemas/ObservableList'
      - $ref: '#/components/schemas/ObservableTable'
      - $ref: '#/components/schemas/TTPList'
      - $ref: '#/components/schemas/TTPTable'
      - $ref: '#/components/schemas/TaskList'
      - $ref: '#/components/schemas/TaskTable'
      - $ref: '#/components/schemas/Text'
      discriminator:
        propertyName: _kind
        mapping:
          AlertList: '#/components/schemas/AlertList'
          AlertTable: '#/components/schemas/AlertTable'
          CustomFields: '#/components/schemas/CustomFields'
          CustomFieldsList: '#/components/schemas/CustomFieldsList'
          Image: '#/components/schemas/Image'
          ObservableList: '#/components/schemas/ObservableList'
          ObservableTable: '#/components/schemas/ObservableTable'
          TTPList: '#/components/schemas/TTPList'
          TTPTable: '#/components/schemas/TTPTable'
          TaskList: '#/components/schemas/TaskList'
          TaskTable: '#/components/schemas/TaskTable'
          Text: '#/components/schemas/Text'
    _and:
      type: object
      properties:
        _and:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
    _any:
      required:
      - _any
      type: object
      properties:
        _any: {}
    _between:
      required:
      - _between
      type: object
      properties:
        _between:
          $ref: '#/components/schemas/FieldFromTo'
    _contains:
      required:
      - _contains
      type: object
      properties:
        _contains:
          type: string
    _endsWith:
      required:
      - _endsWith
      type: object
      properties:
        _endsWith:
          $ref: '#/components/schemas/FieldValue'
    _eq:
      required:
      - _eq
      type: object
      properties:
        _eq:
          $ref: '#/components/schemas/FieldValue'
    _gt:
      required:
      - _gt
      type: object
      properties:
        _gt:
          $ref: '#/components/schemas/FieldValue'
    _gte:
      required:
      - _gte
      type: object
      properties:
        _gte:
          $ref: '#/components/schemas/FieldValue'
    _id:
      required:
      - _id
      type: object
      properties:
        _id:
          type: string
          example: ~354
    _in:
      required:
      - _in
      type: object
      properties:
        _in:
          $ref: '#/components/schemas/FieldValues'
    _like:
      required:
      - _like
      type: object
      properties:
        _like:
          $ref: '#/components/schemas/FieldValue'
    _lt:
      required:
      - _lt
      type: object
      properties:
        _lt:
          $ref: '#/components/schemas/FieldValue'
    _lte:
      required:
      - _lte
      type: object
      properties:
        _lte:
          $ref: '#/components/schemas/FieldValue'
    _match:
      required:
      - _match
      type: object
      properties:
        _match:
          $ref: '#/components/schemas/FieldValue'
    _ne:
      required:
      - _ne
      type: object
      properties:
        _ne:
          $ref: '#/components/schemas/FieldValue'
    _not:
      required:
      - _not
      type: object
      properties:
        _not:
          $ref: '#/components/schemas/Filter'
    _or:
      type: object
      properties:
        _or:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
    _startsWith:
      required:
      - _startsWith
      type: object
      properties:
        _startsWith:
          $ref: '#/components/schemas/FieldValue'
    customFieldsAsObject:
      type: object
      additionalProperties: {}
  securitySchemes:
    Api Key:
      type: http
      description: |2

        The Api key can be generated and retrieved from a user settings. It then needs to be provided in the request headers as a bearer token.

        With curl for instance:
        ```
        curl -H 'Authorization: Bearer <API_KEY>' ...
        ```
      name: Api Key
      scheme: bearer
    Basic:
      type: http
      description: |2

        Use the user login and password passed in the Authorization header of the request.

        With curl for instance:
        ```
        curl -u <login>:<password> ...
        ```
      name: Basic Auth
      scheme: basic
    Session:
      type: apiKey
      description: |2

        This will retrieve the user information from the cookies. This is used by the frontend of TheHive and not suited for bots and automation.
        A Cookie is set in the browser after a user logs in (with login/password or SSO) with the name `THEHIVE-SESSION`
      name: THEHIVE-SESSION
      in: cookie
x-tagGroups:
- name: Standard Features
  tags:
  - Query and Export
- name: Case Management
  tags:
  - Case
  - Alert
  - Task
  - Observable
  - Comment
  - Timeline
  - TTP
  - Task Log
  - Share
  - Case Report
- name: User Management
  tags:
  - Organisation
  - User
  - Profile
- name: Entities
  tags:
  - CustomField
  - AlertStatus
  - CaseStatus
  - Taxonomy
  - CaseTemplate
  - PageTemplate
  - Observable Type
  - Case Report Template
- name: Connectors
  tags:
  - Cortex
  - MISP
- name: Other
  tags:
  - Authenticated
  - Function
  - License
  - Page
  - Login
  - Att&ck
  - Log
  - Describe
  - Status
  - Audit
  - Admin
  - TOTP
  - Dashboard
